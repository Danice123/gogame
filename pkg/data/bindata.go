// Code generated for package data by go-bindata DO NOT EDIT. (@generated)
// sources:
// data/maps/ortho.tmx
// data/maps/tilesets/Overworld.tsx
// data/maps/tilesets/overworld.png
// data/sheets/Entity.json
// data/sheets/Entity.png
// data/sprites/Red_East_0.png
// data/sprites/Red_East_1.png
// data/sprites/Red_North_0.png
// data/sprites/Red_North_1.png
// data/sprites/Red_South_0.png
// data/sprites/Red_South_1.png
// data/sprites/Red_West_0.png
// data/sprites/Red_West_1.png
package data

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _dataMapsOrthoTmx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x90\xcb\x4e\xf3\x30\x10\x85\xf7\x79\x8a\xd1\xfc\xdb\xb4\xb9\xe8\x27\xb0\x88\xd3\x1d\x2b\x24\x36\xe5\x01\xdc\x78\x9a\x18\x12\xbb\x1a\xbb\x17\xde\x1e\x39\x49\x4b\x41\x2d\x95\xd8\x11\x7b\x31\xfe\xce\x9c\x51\xe6\x94\x8b\x43\xdf\xc1\x8e\xd8\x69\x6b\x04\x66\xf3\x14\x81\x4c\x6d\x95\x36\x8d\xc0\x97\xe5\xe3\xec\x01\x17\x55\x54\xf6\x72\x73\xde\x75\x87\xe0\x75\x47\xea\x0c\x15\xc1\x6a\x59\x93\xf1\xd2\x0f\xcc\xb2\x6f\x6d\x63\x8d\xec\x10\x98\x8c\x22\xb6\xac\x88\x05\xb2\x6e\x5a\x3f\xdb\x6e\x10\xf6\x5a\xf9\x56\x60\x96\x22\xb4\x14\xe8\x58\x87\xd9\x47\xa9\x18\x9f\x27\xb9\x40\xd0\x66\xad\x8d\xf6\x24\x30\x45\x58\xc9\xfa\xad\x61\xbb\x35\xaa\xb6\x9d\x65\x81\xff\xd2\xe1\x43\x30\x74\xf0\x9d\x7c\x27\xd6\x4a\xe0\xff\xf1\x6d\x57\xaf\x54\xfb\x00\x32\xac\x22\x28\xc3\x68\x47\x1e\xd6\x9a\x9d\x6f\x46\x0e\xce\x6e\xb9\x26\x81\x93\xe8\x92\xe7\x1d\xf1\xde\x72\xa7\xe6\xde\x1d\x30\x09\xc6\x61\x30\x4c\x06\x23\x7b\x12\xb8\xd4\x1d\xc1\xd3\xc0\xb3\x6b\xab\x55\x11\x40\xa9\xa4\x97\x67\x29\xd7\x6e\x87\x55\x94\xc5\xe3\x29\xe2\x22\x3e\xd6\xd7\x61\x3e\xc1\x7c\xa8\x4e\x9d\xf9\x04\x6f\xd9\x3f\xe1\x2d\x7b\x7e\xb9\xf3\xf6\x7f\x46\x65\x12\xf6\x0c\x59\x25\x43\x58\x5f\x53\xcb\x2f\xa4\x96\xff\x22\xb5\xfb\xf8\x87\x1b\xe4\xf4\xdb\xf9\x2b\xf8\xfa\xbd\x90\x6c\x99\xf4\x72\x53\x45\x1f\x01\x00\x00\xff\xff\x21\xea\x8d\x66\xce\x03\x00\x00")

func dataMapsOrthoTmxBytes() ([]byte, error) {
	return bindataRead(
		_dataMapsOrthoTmx,
		"data/maps/ortho.tmx",
	)
}

func dataMapsOrthoTmx() (*asset, error) {
	bytes, err := dataMapsOrthoTmxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/maps/ortho.tmx", size: 974, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataMapsTilesetsOverworldTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\xcd\x6a\xeb\x30\x14\x84\xf7\x79\x8a\xc3\xd9\xdf\xd8\xf2\x4d\x1c\x07\xac\x64\x75\x6f\xa1\x9b\x2e\xda\x3e\x80\xb1\x4f\x6d\x81\x25\x19\xfd\x24\xed\xdb\x17\xd9\x69\xda\x94\x40\x05\x4d\x20\xab\x30\x9c\x4f\x33\x93\xc1\xe5\xf6\x55\xf6\xb0\x23\x63\x85\x56\x1c\xd9\x3c\x45\x20\x55\xeb\x46\xa8\x96\xe3\xf3\xd3\xff\x3f\x05\x6e\x37\xb3\xd2\x89\x9e\x2c\x39\x50\x95\x24\x8e\x0f\x3b\x32\x7b\x6d\xfa\x06\x21\x1c\xf6\xa2\x71\x1d\x47\x96\x4f\xb2\x23\xd1\x76\xee\x53\xd7\xda\xab\x20\xb3\x02\xa1\xd6\xbd\x97\xca\x8e\xc7\xcd\x0c\x4a\x21\xab\x96\xc0\x6a\x6f\x6a\xe2\xa8\x3f\x7c\xe7\x83\x6a\x11\x0e\xbe\xd9\x32\x47\x38\x9a\x66\x05\x26\xe1\x65\x70\x06\xd1\x70\x5c\x04\x23\x28\x07\xa3\x07\x32\x4e\x90\x0d\xf2\xa8\xdf\x0e\x95\xff\xa9\xb1\x06\x19\x84\x5d\xd5\x7b\xe2\x78\x67\x2a\x6b\x47\x2f\x28\x93\x93\xd7\x65\x12\xcc\x4f\x42\xd6\x79\x54\xca\xbd\x97\xc3\x31\xe0\x51\x7b\xd7\x45\x07\xac\xae\x1d\x50\x5c\x3b\x60\x3d\x05\x54\x4a\xc8\xca\x09\xad\x26\xff\x17\x53\x49\x1a\xbf\x83\x03\x04\x8d\x37\xe3\x9d\x23\x4b\xd3\xc9\xfd\x3b\xc6\x52\x16\xc9\xa5\x37\xc5\x95\xc9\xd7\x7f\x7f\x66\x24\x96\x66\x11\x2b\x05\x2a\xae\xc6\x22\x92\xfb\x7b\x53\xdc\xcf\x33\xb1\x65\xcc\x4c\x6c\x19\x57\x23\x9a\xcb\x2f\xcc\xad\x2e\xcc\xfd\xae\xdf\xf9\xd9\xa7\x5f\x4b\x6e\x33\x7b\x0f\x00\x00\xff\xff\x2b\xde\x90\x23\x0e\x06\x00\x00")

func dataMapsTilesetsOverworldTsxBytes() ([]byte, error) {
	return bindataRead(
		_dataMapsTilesetsOverworldTsx,
		"data/maps/tilesets/Overworld.tsx",
	)
}

func dataMapsTilesetsOverworldTsx() (*asset, error) {
	bytes, err := dataMapsTilesetsOverworldTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/maps/tilesets/Overworld.tsx", size: 1550, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataMapsTilesetsOverworldPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x1c\x96\x77\x3c\xd4\x8f\xe3\xc7\xdf\x47\xf6\x2c\xb2\x77\xca\xf8\x08\x57\xb2\xd2\x9d\x55\xc8\x2a\x22\x65\x76\x46\x64\x66\x93\x3b\x27\xa3\x64\x47\xd9\xce\x16\x65\x6f\x0a\x19\x87\x10\xa1\xce\xcc\x38\x39\x9b\x73\xe9\xee\xdc\xb9\xfb\x3d\xbe\xbf\x3f\x5e\x7f\xbd\x1e\xcf\xc7\xe3\xf5\xfa\xef\x99\x78\xcf\xc2\x88\x8b\x5d\x84\x1d\x00\x00\x2e\x13\x63\x43\x2b\x00\x00\x01\x00\x00\x20\x59\x99\x01\x00\xd8\x68\x6d\xff\x5f\xc1\x0c\x33\x35\x32\x04\xe8\x00\x09\xa0\x57\x1c\x37\x0a\x00\x00\xc0\x16\x60\xfc\x28\x08\x00\x38\xf8\xfe\x17\x10\x90\x57\x20\x04\x00\x00\x4b\xb0\x89\xf9\x6d\x96\x75\x26\xe6\x8b\x5c\xfc\x93\x77\x39\x94\x01\x00\x10\x0e\xbe\x6d\x17\x6c\xe0\xef\xeb\xeb\xee\x17\x0c\x18\x04\xba\x3f\x09\x76\x77\x93\x0a\xf3\x0a\xf6\x94\x32\x32\x31\xbf\xf7\x30\x86\x5b\x10\x00\x24\xa2\x4c\x0c\xf5\x1e\x84\x2f\xec\x3b\x42\xfd\xb1\x77\xdf\xfa\x8b\x30\x9b\xf9\x04\xa0\x9e\xf4\x67\x73\x37\x7c\x7d\x91\x51\x98\xa2\xbf\xa6\xdc\xa0\x6f\x11\xdc\xbf\x0f\x07\x9e\xfe\x72\xa3\x01\xed\x2c\xee\xd8\x7b\xcd\x7d\xe2\xfc\xcf\xae\x45\x64\xe6\xae\x22\x4d\x9c\x3b\xb2\xfd\x5b\xbe\xc6\xa4\x86\x7f\xb5\xc6\x9f\x3d\xa8\x39\xd8\xf1\x08\xcb\xcc\x1a\x62\x38\x37\x7f\x7a\x7f\x42\x60\xfe\xa4\xb7\xcb\x6e\x36\x64\x39\xe7\x7a\xe5\x7e\xa8\xf7\x26\xa1\x93\x64\xb1\xd1\x8f\x23\x44\x48\xa7\x74\x3b\x28\xe7\xcf\xfb\x54\xae\x2b\x24\x4e\x2e\xb2\x38\x2b\x09\x78\x34\xcf\xe7\x2c\xfb\x3d\xf5\x68\x9e\xff\x41\x21\x10\x9a\xc1\xe8\x0f\xe1\x8e\x98\x4a\x25\xd3\xe6\x79\x9f\x71\x58\xa3\xaa\x8d\x4d\x6b\x0e\x8f\x05\x8a\x10\x86\x3a\xe4\xc0\x29\xea\x1f\xe0\xcf\xa8\x88\xa9\x93\x87\x59\xf1\x5a\xde\x35\xbb\x5d\xc2\xa7\xad\xf3\x3e\xa9\xbf\xbb\xd7\xdb\xb0\x17\x97\x8e\x1e\xda\xd8\x98\x3b\x62\x26\xd6\x1c\x07\x16\x1b\xb7\xdc\xf3\xcb\xe2\xfc\xd5\xf3\x43\xc5\x74\x12\x20\x98\xa3\x58\xc0\x1f\x67\x6d\x63\xe3\x9a\xac\x95\x97\xcf\x51\x45\xdf\xd6\x3c\x45\x39\x89\xa4\x62\x2f\x7d\x5f\x69\xc5\xe3\x83\xb6\xf3\xb0\xde\xcd\xf3\x2d\x87\xe6\xcb\x9c\xa7\xda\x61\x5d\x22\x1f\x6d\x87\xc3\x04\x2d\x16\x74\xfb\xef\xd9\xcf\x1d\xfd\x09\x9c\x57\xca\x1e\x4b\xf0\x0e\xd5\xb6\x18\xb8\x7f\x13\xdb\x5d\xfe\xc5\x97\x14\xf9\x05\xd2\x68\xb7\x49\xe8\x94\xe6\x30\x18\xd8\xed\x52\x1f\xfb\x33\xad\x03\x85\xe6\xe3\x70\x4f\xad\x6d\xde\x3d\xaa\xc7\x18\x89\xcc\xc5\x8b\xba\x3e\xe6\x9a\xb8\xd1\x9d\xe0\xdf\xbe\x78\x89\xcb\x12\x8b\x7d\xbe\x40\x0a\xd6\x39\x73\x7e\xef\x5e\xf6\xe8\x6e\x9d\xf7\xad\x1f\xb9\x6c\x48\xa1\x4d\xbd\xe6\x39\xf7\x7f\x8b\x01\x30\x55\xb7\x40\x57\x33\x6f\x45\xca\x6a\x89\xfe\x58\xc2\x79\x57\x02\x56\xad\x60\xc6\x47\xfd\xfa\xd8\x9f\x6b\x42\x72\x04\xf1\x89\x48\xae\x95\xfd\xd0\x5a\x5e\xa9\x82\x38\xe4\x21\x29\x58\x67\xbd\xe4\xee\x93\x52\x0d\x37\x50\x1c\x6b\xdc\x3d\x14\x0a\x9b\xac\x20\x02\xf3\x93\x90\x6c\x58\x73\x8b\x3f\x1a\xfa\xe6\xac\x5e\x80\x86\xe1\xe3\x6d\x47\x3c\x35\xcf\x2c\xfb\x59\x85\x93\x52\x67\x02\x60\xb6\xa3\xd9\x98\xa3\x93\x48\xb8\xcc\xb9\x0e\xa6\xe2\x14\x4b\x7d\x00\x8a\xf9\x84\x4c\xfc\x7d\x8f\x53\x4a\x9d\x5b\xea\xc9\x96\xff\x7f\x1d\x7a\x92\xf9\x54\xb7\x64\x9e\x8e\xa3\x7b\x28\xe7\x7e\xbc\xd0\x5f\x0a\x3c\x20\x52\x03\xdd\x72\xb8\x61\x8d\x75\x70\xd4\x3c\x5d\x0d\x4e\x9e\xc8\xce\x0e\x80\xa4\xa5\x1f\xce\x24\x4d\x9e\x87\xb1\x7c\x0f\xef\xe3\x67\x0c\x8f\x15\xd0\xc5\x6c\x69\x69\xa4\x5d\x36\x8d\xc1\x2e\xee\xb7\x65\x98\xc1\xa6\x69\x22\xbf\x87\x7c\x1b\xe1\x3d\xcb\x7e\x96\x32\x27\x10\xcd\x2f\x99\xff\x64\xb9\xcc\x1e\xdb\x0d\x5c\xe6\x1a\x87\x87\x0b\x7e\x1f\x36\x6a\xfe\x8d\xa3\x6c\x41\x02\x38\xfa\x87\x2f\x84\x93\xf1\x81\x7f\x21\xf7\x75\x05\xb0\x4b\x33\x48\xf5\xde\x29\x0f\x1a\x47\x78\xe3\xb2\x5f\x9a\xd9\x8b\x22\x5a\xd0\xda\xe2\x7e\x5b\x23\xb8\x19\xbd\xd7\x16\xce\x20\x27\x98\x8a\xd0\x26\xa2\x3a\x79\x0e\xfb\x3b\x23\xea\x2a\x4e\xcb\x75\x25\x25\x0c\x30\xec\xd6\x19\xd3\xc4\xed\x42\x86\xc4\xe9\x8e\xb6\xbf\xc5\x60\xf4\x52\x8e\x28\xe1\x18\x3b\xb4\xd4\xd3\xdb\xda\x63\xe9\xa5\x7b\xd3\xb1\x97\x69\x33\x8c\x4c\x2d\x0a\x61\x90\x5b\x10\xdb\x05\x1c\x3a\x2c\x5d\xee\x0e\x78\x89\xe5\x37\x4c\x07\xb8\x69\x8e\x46\x4e\x1d\xf1\x87\x00\x6a\x12\x98\x53\xf5\x15\x14\x87\x9c\x18\x2a\x8d\x42\xa5\x2e\x3d\x66\x78\x2b\x25\x75\x65\x72\x62\xcf\x9a\xb3\xb8\x8c\x0e\xf9\x09\x72\xb8\x23\x8e\x0c\x45\x3c\xf4\xd1\x4d\x62\x9a\xdb\x39\x57\x29\xd4\xc7\xea\x0a\x34\x2a\xe4\x57\x73\xaf\x46\xed\x00\x2d\x78\xf8\xce\xb9\xa8\x26\xde\xc7\x85\x7d\xfc\x2c\x42\xf7\x80\x41\x01\x0f\xb3\x10\x00\x67\xcf\x52\x9c\x72\x68\x2d\xd7\xb7\x0b\x8c\x4c\xb0\x56\xf3\xe5\x78\x1a\x0a\xe8\xa2\x18\x9e\xd4\x30\x0a\xb5\x71\xeb\x8a\xae\x54\x59\x14\x9b\x0a\xbc\xb4\x07\x59\x8b\xb9\xf4\x09\xf5\x4d\x3d\x47\x56\x73\xbb\x90\xb4\x81\x7d\x6a\x9b\x36\x68\x82\x48\xec\x53\x59\x78\x25\x59\xc1\x34\xa5\x61\x1e\x02\x60\x6b\x18\xa7\xbe\xa7\x79\xdc\x1a\xe2\x75\x50\xb8\xc3\xe4\xef\x34\xf1\x31\x08\x2e\x8f\x8f\xb9\x72\x1c\xf2\x4b\xed\x27\xc8\x2c\x04\x28\x8d\x58\x69\xe5\xd6\xbd\x09\xad\xe7\x93\x7a\xe2\xf2\x91\xf1\xa8\x96\x4f\x15\xcd\xef\xc6\x65\xcc\xd0\x67\x2b\x77\x44\xa0\xa0\x44\xd9\x5d\xd6\xb5\x14\x8e\x22\x59\xf9\xed\xf1\x43\xb0\xfb\x76\x4a\xde\x7c\x5a\x7e\xfe\xca\x48\xd2\xdb\xf2\x42\xbb\x37\xf3\x6a\xfb\x49\xf4\x43\xca\x8e\x22\x3c\xbf\x12\xfc\x36\x77\x32\xcd\x80\xaf\xa8\x37\x2c\xd7\x7f\x07\x43\x5b\xfc\xfd\xc9\xf6\x63\x66\x98\x0c\x93\xbf\xb9\x2b\x8d\xd2\xc1\xb6\x7c\xb1\xbd\xd3\xea\xb5\x69\x1d\x5b\x2f\x8b\x4e\xad\x09\xea\x87\xdd\x16\x0c\xdf\x39\x8f\x26\x3e\x6a\x77\x8d\x64\x23\x70\x95\xce\x2a\x8f\x9b\x48\xf3\x32\x3d\xac\xa9\xd1\x9e\xd6\xee\x5e\xfe\xfe\x28\xf9\xbc\xa9\x1b\xf7\xe3\xf2\xee\x70\xb3\xfb\xfc\xe6\x8e\x18\x5f\xd5\x94\x37\x77\xd4\xf3\x27\x32\x7e\x5d\x1d\x3b\x1e\xd9\xc8\x7a\x89\x34\x98\x5e\x56\x09\xab\xac\x16\x25\x6c\x6f\x5b\x53\xe8\xcf\x5a\x9f\xf9\x07\xdc\x17\xb0\x2d\x78\x58\x5a\xf2\xf3\xd2\xed\x9d\xee\xd5\x60\x4e\x5f\xfa\xe5\xfd\xdb\x1c\x1d\x4a\x63\xb6\xd8\x8c\xcd\xfa\x9a\x1d\x63\x6f\xac\xf6\xe3\x7a\x8c\xef\xe3\xa3\x86\xba\xd4\x1e\x15\x2f\xc4\x22\x69\x7a\x61\xbf\xdf\x0e\x7e\xef\xd1\xfb\x4a\xa5\x31\x66\xb2\x5c\x5c\x62\x52\x93\x27\x46\x5f\xb1\x6b\x53\x30\x5d\x08\x75\x9d\xe5\x4f\xa1\x09\x6f\x80\xf4\x3d\xfe\xa1\x1f\x9f\xf2\x2a\xf1\xe8\xfc\x4a\x05\xd6\xb0\xe5\xcf\x4d\x4a\x8b\xf1\xc6\xe3\xa9\xc9\x66\x9b\x97\x27\x29\x33\x32\x91\x08\x84\x9f\xf5\x83\xea\x6e\xf2\x20\x2f\x58\xc3\xeb\xe4\xe7\x33\x77\x09\x49\x89\x2f\x01\xa7\xbe\xa4\xc5\xd1\x38\xd9\xab\x7c\xb1\x41\x84\x42\xa1\xf3\xe6\x8f\xfc\x0e\x60\xe2\xc0\xef\xff\x1e\xdb\x07\x4b\xe2\x08\x11\xbb\xec\xc5\xba\x7d\x39\xb1\x6e\x16\xa6\x21\x9c\xd2\x07\x4f\x56\xf0\x0a\x28\x52\x5c\x4a\xe0\xd3\x1b\x75\x9a\x84\x7a\x8c\xf7\xd3\xd5\x67\x5f\x9c\xf2\x6b\x6a\x52\xa7\x55\x0b\x3a\xc9\x4f\xa5\x49\x7a\x77\xdf\xa8\x8c\xb6\x97\x33\x71\x54\x77\xf2\xf9\x26\x2c\x7c\x13\x70\x11\xe5\x5b\x86\x77\x78\xb7\x7e\x49\xc8\x0c\x2d\x5f\x49\x1d\xff\xbc\xec\x57\xf6\x1c\xb6\x4e\x8e\xb2\xd8\x6e\xff\xb7\xb0\x50\x27\xcd\x6c\x2e\x98\x14\x9f\x3b\xe1\x71\x95\x10\xe4\xfd\x72\x98\xd3\xa3\xf9\xd1\x18\x15\x82\xb5\xcc\x9a\x62\x38\xfa\xf9\x26\x38\xf3\xad\xa1\x74\x52\xe9\xb6\xd5\x92\x1e\x47\xa2\x80\xcc\x55\x91\x6a\x86\x74\x33\x8b\xe9\xd0\xbf\xf3\xa1\xdd\x37\x88\x44\x62\xec\x4a\x9c\xa5\x25\x6a\x7c\xf9\xd5\x4d\x57\xdb\x5e\x32\xc5\x6d\x3d\x3a\xf2\xd4\x4d\x42\x52\xa2\x50\x33\x6f\xc4\x73\x9f\xd7\x60\x78\x5d\xde\x2c\xac\xdb\x71\x6c\xc4\xed\x9b\x28\xe1\x85\x38\xe0\xc1\x5e\x53\x73\x6d\xec\xcf\xb1\x6c\xf8\xc8\x70\x15\x38\xe2\x3d\x88\x11\x55\x87\xbf\x6c\x8a\x64\xb1\x1b\x36\xa3\xd4\x53\x9e\xc8\x21\xbf\xf2\x8d\xdf\xea\x0e\xc4\x08\x21\x4b\xa4\x8a\xb2\xb0\x43\x52\x28\x2e\x8d\x7b\x46\x07\x35\x7c\x7d\xc8\xf3\xcc\xc5\x0d\xe8\x02\x96\x37\xe1\x07\xbf\x1b\xa2\x42\x1d\x31\x65\x6c\x0c\x56\x0d\x69\x9e\xad\x8f\x5b\x55\x04\x95\x99\x8e\xc2\x75\xd5\x98\xfc\x38\x46\xbc\x42\x00\x25\x20\x54\xad\xc7\xf6\xd5\xea\xf5\x1e\x7e\x20\xeb\xd7\xa7\xb6\x43\x06\x6f\x25\xab\x75\x4d\x41\x05\xde\x0e\x7a\x9b\x06\xc5\xff\xc5\xcc\xac\xf9\x8b\xfa\xfc\x2e\xad\xd3\x02\x16\x6a\x13\x33\xc8\xd1\xca\xda\xf4\x61\xe7\xb8\xba\x64\x81\xac\x76\x4f\x66\xdb\xe6\xf0\x73\xaf\x34\x8f\x4b\x79\xa4\xe9\x5f\xd6\xc1\xe2\x68\x17\x50\xba\x40\x07\xe5\xcf\x41\xbb\x28\x3d\x24\x7a\xe3\xb0\x3b\x40\x61\x7f\xd4\x31\x56\x48\xcc\x34\xf0\x3e\x65\x1d\xbe\x11\x81\xd8\xd3\x4c\x7e\xc3\xbc\xab\xe2\x03\x81\xae\x5c\x7d\x8d\x7b\x8b\x26\x26\x32\xb9\x28\xe6\x2c\xb1\x2c\x39\xeb\xf9\xc9\x1c\x1c\xb8\x15\x96\x95\x05\xa4\xf8\xad\xac\xd0\xfc\xfe\x34\xb6\xb8\x4b\x86\x00\x1e\xdd\xcb\xea\xc1\xae\x19\x11\x47\xeb\x17\x66\x9e\x98\x6e\x77\xd5\x25\xe5\xe7\xe7\x5f\xba\x2e\xe1\x2f\xcf\xc4\x3e\xd6\xd4\xb2\xfe\x0a\x09\xab\x7a\xad\xa8\xac\xe4\x50\x1e\xf5\x64\x7d\xbd\x9f\x73\x38\x0a\xa2\xa1\xa1\xa1\x11\xeb\xbf\xa5\xfc\x66\xdd\x70\x80\x6f\x40\x92\x8d\x5d\xd8\xbf\xbe\x76\x70\x30\xdc\xbc\x6b\x95\xff\xab\x1c\x7d\xb9\x95\xa5\xcf\x96\xa5\x6f\xd8\x48\x9a\xd7\xfe\x29\xf2\xab\xa7\xbd\x80\x2e\xcc\x70\x34\xbe\x91\xe9\x08\xf6\xfc\xc9\x44\x5b\x50\x0f\x58\xc3\x68\xfc\x90\x1d\xb0\x42\xb3\xdc\x88\xf6\x81\xbe\xfc\x4f\x31\x90\x2d\x05\x54\x5e\xf9\x27\x70\x9b\x73\xcf\xc5\xf1\x66\x6f\xa7\xdd\x13\x34\xf1\x0b\xf6\xce\x05\xb3\x4b\x56\xf0\x53\x79\xaa\xee\xc8\x6e\x66\x9b\xd1\xca\xbd\x01\xb0\x04\xec\x45\x28\xb2\x32\xd7\x27\xde\x3a\x4b\x6b\x7e\x3f\xb4\xf6\x5f\xc5\x33\x68\x51\xe9\x90\x37\x14\x35\xb9\xe8\x4a\x22\x5f\xd6\x98\x45\x53\x75\x96\x8d\xb6\x7f\xcf\xe9\x0b\x3b\x0c\x2c\x44\xa6\x0e\xc1\x5f\xf6\x18\xfc\x78\xe7\x76\x3c\xe9\xd1\x9c\x29\x79\x19\x2e\x50\x5a\x6d\x10\x1f\x93\x76\x4f\x97\x0f\x65\xaf\xfa\xa1\x71\x8a\x4a\xac\xd6\xd8\xba\xb5\x43\x1f\x2b\x8c\x88\x0a\xd7\xb9\x76\xf2\x03\x13\xb4\x66\x05\x70\x12\x48\x10\x12\xac\x51\xf3\xcd\x81\xeb\x66\x5c\x4e\xa6\xfa\x89\x94\x01\x9f\xeb\xc2\x31\x75\x3a\x72\x0d\x07\x75\xcb\x2a\x10\x8d\x67\x1d\x0e\x51\x0c\x11\x6f\xab\xbd\x8c\x51\xb6\xca\xbf\x57\xea\xcd\x9b\xe4\xed\xb6\xfb\xd8\xd0\x4f\x2f\xb4\xbf\xb8\xc8\x97\x91\x9d\x27\xd2\x58\x4f\x97\xb3\x49\xb7\x61\x93\xd8\x11\x2f\x7e\xd8\x12\x31\xd2\xc0\xfe\x1f\xe6\xca\x45\xd7\x79\xe4\xb5\xf7\x52\x52\x4c\x48\xd5\xbe\xe1\xff\x7a\x7c\x3a\x6a\x61\x3c\xf5\x1f\x39\x70\x18\x1e\xc6\xa6\x28\xbe\xb7\x4f\xde\xbd\x0b\xb7\xac\xf0\x3e\x08\x42\x88\x65\xaf\xa8\x38\xdd\x1f\x61\xec\xfa\x5c\x92\x74\x95\x75\x84\x31\xba\x4d\xaa\x88\x7f\x2a\x69\xc8\xe0\x25\xb2\x0d\xe9\xf2\x5d\x6a\xf5\xdd\xd5\xb9\xe1\x5a\x86\xc5\x5f\x0f\x94\x4f\x1c\x6c\x5f\x32\xa9\x38\x74\x46\x2f\x26\xa9\x01\x79\xb9\x3a\x73\xaf\x3c\xa0\x98\x53\x1b\x9b\x94\xb6\xe1\x28\x54\x08\xd0\x49\xa0\x42\x70\x46\xde\x16\xbb\x46\xab\xd6\x72\x2e\xf9\x2a\x27\xd6\x0d\x27\x6e\x52\x0e\xc7\xdb\xae\xcf\x9d\x4d\x91\x2c\xe7\x9a\xbb\x81\x96\xea\xa1\xc6\xd1\xf5\xb8\x72\x16\xe8\x5c\x60\x7d\xb0\xc1\xc5\xcf\xaa\x68\x7e\x1b\x9b\x8b\xaf\xfa\xdc\x7e\xa8\x4d\xfc\xe0\x38\xb3\xf8\xcb\xe6\x85\x97\x8e\x25\x38\xfa\x15\xf8\xfc\x4c\x8d\xc5\x80\x72\x56\x08\xd4\xbf\x9d\x09\xa6\x11\x51\xfc\x1d\x22\x12\x6f\x71\xb8\xe4\xc4\x08\x04\x8c\xa6\x8c\x3b\x9c\x4e\xd3\x1d\x33\x1e\x22\x6d\x67\xf3\xf3\x75\xf4\xb3\x65\xaa\xf8\xf2\x9d\xfb\x60\x83\xd9\x0d\x79\x92\x0c\xae\xaf\xaf\xdf\x27\x36\xc8\xb3\x30\xc5\x71\x55\x0d\x49\x31\xbd\x4b\xef\x89\x22\x4f\x17\x4f\xa5\x87\x4e\x9b\xac\xd4\xd7\xdc\xe5\xb4\x4d\xa9\xbd\x70\x74\x30\xe0\x98\xbf\x8e\xcd\x88\x86\x21\x44\x2d\xb6\xd5\x0e\xec\x67\x56\x44\x52\x17\x2e\x32\x22\xca\x6f\x24\x92\x7d\x85\x81\x53\x54\x8e\xe4\xb0\xb3\x72\xb6\x13\x8e\x67\x9f\xd5\x10\xf5\x6a\xc9\x40\x1b\xf5\xdf\x95\xf4\x7e\xdc\x61\xd7\x70\x9c\x5a\xb4\x64\x61\xb2\xa5\x4c\xc3\xec\xdc\x4b\x8d\x44\xd5\xfe\x3a\x6d\xa7\x28\x3d\xc4\xa7\xd5\x4b\x6d\xe3\x70\x97\x00\x2e\xe8\xf4\xd1\xd6\x25\xd3\x21\x9d\x2d\x96\xe3\x7e\x7e\x89\xc9\x74\x09\x18\xb8\x72\x19\x39\xfd\x1d\xfa\x97\xe8\xd8\xa1\xb5\x5c\x8b\x39\x1d\xe8\x18\x4b\xa5\xfc\x55\x96\x14\xc3\x80\x9c\x79\xa6\x2d\xa0\x97\xf8\xc9\x42\xbf\x06\x2f\x6d\x50\xdb\xd0\xd2\x17\x0e\xf8\x18\xd3\x61\x76\x9d\x51\x08\xaf\x87\x15\x02\x8c\xba\x28\xd4\xf0\xb9\xc0\x61\x80\x5d\x6d\x54\xf5\xb2\xbc\xc9\xc3\xe9\x53\x63\x0d\x0d\x8d\x04\x25\xd0\x69\x3e\x4d\x6e\x5b\x65\x83\x9e\xd6\x92\x1d\x87\xb5\x73\x63\x9a\x7a\x1e\x65\xcd\x6a\xe9\x6c\x12\x2f\xdf\xd1\x7d\x3e\xed\x4b\x6f\x6f\xb4\x69\x08\x30\x54\x02\xd5\x8b\x89\xc0\x97\x10\xa8\x8f\xc5\x5f\x5a\x8a\x23\xb9\x50\x3b\xc0\xfa\x7b\x7f\x3d\x0e\x56\x61\x5e\x15\x5a\xef\xd9\x30\xd4\xa8\x70\x0d\x4a\x3f\xeb\x15\x4d\x06\x17\xd3\xcd\x05\x07\x3d\x68\x97\xca\x16\x03\x7a\x76\x1b\x18\x09\x37\xc0\x38\xc9\x48\x5a\x7d\x7d\xbd\xb4\xc2\x7c\xc2\xf5\xeb\x37\x5a\xd2\x73\xf8\x85\xed\x76\x9a\xc3\xfb\x44\x6b\x2c\x3e\x53\x02\xc2\xfe\xfe\xfe\xa5\xac\x79\x74\xd6\x0e\xd7\x4b\x5a\xb6\x21\x7b\x0c\x44\x23\xe8\xcd\xdb\x32\x40\xba\x5e\x10\x36\x0f\x68\x38\x3b\x70\x62\x8f\x19\x69\xef\xd7\x04\x20\x53\xd2\xf1\x49\x31\x2f\x99\x72\x51\xe3\xd1\x0a\x9b\xba\x19\x4e\x5c\x96\xe9\xcc\x29\xda\xf4\x29\x02\x8f\x3b\xc2\x9e\xb7\xc1\xbb\x10\x69\x5b\x55\xbc\x46\xa9\x7f\x91\xd1\xd9\xb8\x3a\x1a\x6f\x19\x02\xb0\xbd\x44\xca\x9f\x23\xcd\x38\x5c\x50\xfa\x7c\x49\xba\x6f\xb7\xaf\xba\xc9\x6c\xc7\x12\x17\x3b\x6c\xb5\x47\x7e\x55\x14\x2d\x4f\x20\x48\x89\x2f\x8b\x76\x61\xe6\x78\x00\x41\xf5\x5a\x96\x53\x89\x4e\x27\x15\xa8\xd3\x02\x82\x29\x4c\xf2\xe0\xb1\x75\x68\xeb\xe3\x56\x2e\x25\x63\xeb\xf3\x16\x67\x9c\x9e\xed\x97\xae\x69\x54\xf4\x7b\x8a\x71\xf1\x98\x80\x02\x37\x71\xfa\x69\xd7\x55\xea\xf7\x0f\xdf\xbc\x62\x8f\x81\x58\xc7\x0c\x49\x8f\x04\xba\x35\x95\xa2\x4e\x5e\x41\x69\x97\xbe\xa1\x49\xbd\x74\x72\x15\xf3\xcd\xee\x29\x52\xd4\x0c\xf7\xa4\xb4\xe9\xcf\xc4\x0b\x34\x32\x01\xf7\x81\x0c\xa7\x92\x1a\x13\xb5\xa2\x95\x24\x6e\x46\x4b\x0a\x22\xff\xd9\x1b\xe7\x3f\x17\x48\xba\x1d\x53\xad\x7d\xd0\x6e\x9a\xa2\xaf\x9a\x79\x7c\xb0\xdc\x9d\x90\x4f\x15\x29\x31\x0d\x08\x30\x48\x13\xd2\xbd\x96\xe8\xdb\xb1\xc9\xe0\xe2\xc0\x2a\x69\xbb\x7e\x6d\xde\x1a\x7d\x2e\xfc\xa9\xe2\x01\x43\x14\x1d\x7f\xb6\xa1\x21\x43\xc0\x1e\x7e\x5f\x67\x98\x43\xa6\x77\x01\x82\x26\x37\x18\x47\xa8\xc1\xdc\x7e\xbe\x47\x05\x3d\x5c\x96\xe0\xde\x1c\x02\xcf\xad\x68\xc9\xcd\x61\x35\x31\x30\xf0\xee\x37\xfa\x17\x5b\xba\xd7\xca\x6d\x7b\x13\x0f\x9d\xdc\x2f\x94\x7a\x8a\x45\xc7\xd8\x05\xe3\x90\x3d\xfb\x1a\xc6\x8e\xf7\x51\x56\x4b\x37\x9e\x8e\x43\x4b\x2d\x90\x57\x4b\xc1\xa7\x69\x82\x6f\x86\xc5\x7c\xec\xc3\x2f\x53\x09\xb8\x49\x93\x4d\xcc\x09\xb5\x31\x7c\x8f\x0a\x37\x8b\xfe\xf4\x19\xbb\xe9\x6f\x5c\x08\xb4\xff\x7e\x3f\x56\x11\x41\x3c\x70\xb4\xaf\x5a\xfd\xd2\xc7\xc3\x65\xee\x93\x97\xc6\xc1\xcf\x45\x94\xde\x13\x1b\x92\x6c\x45\x4f\x84\x56\x3f\x56\x15\xc0\xb0\x4e\xd0\x7a\xda\x18\xda\x05\x80\xd3\xf2\xcf\x51\xea\xef\x55\x3b\xec\xde\xbb\xef\x86\x4d\xa7\xea\x1c\x84\xce\x35\x9d\x57\xd7\x79\xc7\x34\x75\x42\x35\x98\x74\x9e\xa1\x42\xf4\x20\x12\x67\x72\x82\x31\xa1\x7f\xf1\x08\xc0\x6d\x28\x9e\x79\x23\x3d\x1c\x3e\x30\x96\x96\x9d\xa9\x04\x22\x66\x3a\x76\xf0\x10\xba\x61\x0c\x0a\x70\xda\x14\x4c\xca\x1e\x8a\x84\x6c\xc9\x72\x8d\x08\xfa\xbf\x51\x93\xb2\x04\xad\xa7\x82\x25\x82\xd2\x43\xf7\x3a\x8f\xf8\xbd\xfa\xfe\xff\xaf\x04\x63\xdf\x03\xc9\xf6\x8e\xf2\x4a\x94\xfb\x23\x81\x8c\x10\x86\xc2\x9a\xfb\xc5\xad\x8f\xd6\xa6\x37\xf3\xda\x0e\xf3\x98\x0b\x76\x00\x25\x86\xe2\x43\x6d\xe4\x1c\x9e\x4e\xad\xa2\xbf\xe9\x02\xa2\x4f\x09\xbd\x86\x13\x28\x96\x13\xfd\x7a\xe7\x3d\xea\x7d\xc0\xee\x98\x7a\x87\xed\xf8\xe2\xdd\x22\xba\xac\xe7\xd8\xba\x46\xca\x83\xd2\x3d\x6f\xd0\xc6\x07\xc6\xf4\xbc\x7e\xce\xdb\xf2\x42\x2e\xa2\x21\xdd\x57\x8a\x8a\x8a\x3e\x63\x41\xd3\xea\x47\x76\xa0\x80\x94\x1b\xbf\xe6\x8a\x33\x94\x37\x9c\xe9\xb4\xec\x0f\x7c\x2e\xa6\x7e\xd5\xdc\x52\xa1\xd4\xa5\xf2\x09\xd4\x52\xa5\x03\x46\x65\x76\xe5\x70\xfa\xef\xf5\xca\x43\x7a\x4a\xe7\xf6\x67\x56\x05\xf8\x88\x35\xfc\x03\x99\xe8\x4c\xb4\x58\xba\x38\x21\xc9\xe8\x15\xf4\x03\x26\xfc\xa5\x85\x49\xb2\x89\xdb\x65\x6f\xe3\x3a\xbd\x00\xa3\x92\x45\xee\xf6\x41\x7f\x25\x1f\xeb\x40\x53\x4c\xe1\x64\x13\xde\xb7\x64\xb3\x10\xa0\x64\xf6\xa1\x78\x9f\xa1\x04\x03\x20\x08\x26\x3e\x72\x65\xbb\xd9\xe3\x32\xab\x15\x7c\x13\x77\x6f\xe3\x26\xdd\x01\xa3\x32\x68\xb5\x16\x81\x28\x40\x5d\x1d\x79\xd5\x18\xa3\x7c\x06\xfc\x73\x26\x16\xca\xfc\xda\x20\x4e\x87\x25\x36\x9a\x7c\x70\x39\x9a\x8c\xb7\xcc\x32\x06\x8c\x39\x7a\xd3\xb4\x91\x8d\xd6\x18\x72\x55\x17\x02\xb2\xb0\xf2\x0e\x37\xac\x2b\xf4\x0c\x1e\xcc\x94\xbe\x66\x40\x01\xb9\x24\xfa\x07\x48\xa9\x5a\x8b\x03\xef\x48\xa9\x25\x6b\xa6\x7b\x0e\x4e\x88\xcf\x2d\xf5\x62\xb3\xb6\x0c\x0b\x3b\x80\x95\x0d\x03\x2c\xf8\x7d\xe9\x58\xf3\xfc\x38\xf5\xe4\x30\x5a\x38\x84\xf7\x5e\x7e\xef\x5f\xf9\x8f\xe9\xbb\x82\x37\xa3\x23\x6b\xde\x7a\x5f\x4f\xe3\x38\x3c\x2e\x30\xe2\x94\xaf\xb3\xfd\x98\x80\x01\xad\x5e\xe7\x2a\x17\x14\x0f\x3a\x8a\x49\xca\xd1\x06\x14\x58\x35\x43\x61\x37\x85\x6e\x0e\x59\xbc\x65\x02\x3d\xc7\xc3\x9a\x53\x1f\x2c\x70\xdc\x24\x5c\xc0\x16\xff\x23\x0f\x48\x0e\xc3\x9b\x5b\xc8\xb8\x1e\x84\xa3\x9a\xc5\xc8\x00\xb4\x5b\x15\x1a\x55\xef\xd5\x0a\xd6\x69\x34\x7e\x51\xd2\x37\x17\x3d\xd7\x9e\x97\x8a\x23\xdf\x67\xf5\xd4\x14\x0c\xf6\xac\xe5\xfa\x82\x48\x27\x9d\x4d\x7d\xab\x22\xfb\x73\x4e\xb4\x7d\x60\x1f\xe4\x74\x60\x09\xe0\xf6\xd2\x45\x69\x27\xd4\x61\x54\xf4\x44\x1a\x9e\xff\x21\xdf\x1f\x63\x0d\x97\xdb\xb7\x1c\x4f\x63\x48\x88\xbc\x48\x62\x05\x85\xfa\x1c\x6b\x23\x47\x19\x58\x79\x01\x70\x9a\x95\xc4\x18\x53\x5a\x84\x83\x96\x6f\xd6\xd7\x2a\xde\x78\xaa\xf8\xc7\x6d\x85\x1e\xde\x48\xa7\x0b\xba\xe0\x78\xc3\x0d\xc8\xa0\xc0\xa5\xa1\xa9\x31\x62\xf6\xf7\x2f\xe7\x5e\x0b\xf7\xf8\xf4\xaa\x39\x8c\x4d\x77\xfd\x8a\x3a\x74\x8e\x3e\x6b\x6d\xf0\x7a\x72\x50\x67\x4c\xb2\x84\x9e\x6d\x6c\x80\x94\x6a\xd6\x7f\x8d\x9e\x51\x7b\xe4\xbf\xc9\xbc\x7f\x55\x7a\xb0\x1c\xc2\x89\x7d\xa5\x53\xa9\x25\x28\x6e\xe5\x68\xfe\x49\xea\x35\x2f\xe4\x07\xe1\x30\xff\x35\xde\x84\xc4\xa9\xc0\x7a\x80\xe8\xf4\xde\x05\x4d\xbd\x94\xba\xfa\x30\x2b\x9e\x0f\x63\xbc\xc3\x3d\xc4\xd8\x1a\xa5\xa4\x38\xf4\x4e\xf1\x50\xf3\x20\x90\x58\x53\x63\xb5\x0b\x84\x67\x57\x29\x63\xea\x35\x40\x48\xb2\xc7\xe3\x0e\xd7\xd7\x2d\x6f\xa5\x44\xf4\x79\x93\x5b\x5b\x3b\x92\xf0\x78\xda\xda\x89\xa8\x3e\x2f\x6f\x50\x59\x1b\x3c\x2a\xfc\x2f\xfa\x46\xbf\xb9\xa7\x0e\xb7\x4c\xee\xca\xe0\x52\x9b\x87\x98\x18\x06\x8d\xe1\x97\x65\xd3\x55\xdb\xee\x3c\x32\xb0\xee\xad\xce\xf7\x6c\x86\xda\x01\xc5\x68\xc9\xeb\x3f\xa8\x09\x2d\xac\xe8\x71\xd2\xc2\x99\x68\xfc\xed\x80\xf0\xcd\x98\x94\xd1\x1b\x4b\x46\x2e\x8b\x5d\x27\x52\x41\x33\xd8\x39\x83\x00\xdf\xa8\xdd\x33\x2d\x55\xed\x6b\xea\x88\x3b\xfa\x00\x3d\xbb\x27\xd3\x01\x08\xb0\x76\x3e\xbd\xef\x3a\xfe\x27\x33\x61\xd7\x80\x37\xb9\xf3\x3d\x48\x78\x25\x94\xee\x80\xa9\xe7\xd1\x43\x8e\xc7\xe5\x9e\x83\x05\x72\x1d\x7e\xa3\xda\xb5\x2a\x80\xdb\x5b\x44\x7f\xc4\x7b\x63\xbd\x6d\xd3\xcd\x59\x8d\x5f\xca\x5c\x76\xa4\xe4\x9d\xaa\x8b\x74\xe5\x59\xfe\x87\x1e\xdd\x17\x71\xc1\x65\x2b\x53\x86\x82\x58\x79\xf3\xab\x57\x7e\xb6\x7e\x53\x60\x85\x15\x25\xf2\xca\x9c\xd3\x0c\x5a\x0f\x99\xfc\x4a\x2d\x21\xda\xc0\x7c\x94\x79\x3b\x6e\xa7\x3b\x00\x05\x49\xd5\x50\x75\x8c\x14\x91\x80\xb5\xce\x3f\x75\xac\x77\xe6\xd6\x43\xa6\xe8\x2b\xac\xa7\xd1\x7a\x12\x86\xaf\xd1\x9f\xb5\x6a\x0b\x28\xa9\xba\xd9\x7f\xda\xe8\x7b\xf8\xd1\x46\x8d\xc0\x63\x82\xe9\xa9\xa4\xd9\x17\x8b\xd5\xc5\xfc\xfb\xa4\xe9\x9a\xcc\x67\xd9\x68\xd7\x95\xf7\x3f\xee\xae\x1e\x72\x1b\xd2\xc4\xfa\x4f\xf2\x9f\x9c\x63\xac\x4f\x87\x07\x68\x55\x82\x8b\x7d\x41\xfa\x1f\xe9\xe8\x43\xea\x5a\x3f\xfd\x5f\x7b\xaf\xd6\x30\xcf\x4f\xea\xd6\x21\xe5\xb3\x11\x07\x50\xc4\x12\x6d\x0a\x69\xa8\xf7\x4e\xff\xc6\x25\xd4\x6f\xae\xf8\xa6\x34\xf1\xc6\x89\xab\x43\xac\x9d\xb4\xee\xe3\xc2\x4f\x20\x3f\x98\x77\xc7\x9d\xdd\x93\x05\xe1\xc4\xf6\x9f\x73\x8b\x6d\xd2\x41\x0e\xa2\x2b\x1a\xdc\xeb\x17\x74\x44\x8a\xae\xb2\xe6\xc0\xf0\x3c\xc2\x8c\x5b\xb1\x3e\x9b\x9f\xfd\xcd\x56\xa7\x15\xc2\xc4\x91\x13\x13\xfd\x13\x16\x8d\x44\x68\x28\x55\x88\xc3\x2d\x00\xa4\x7a\xbf\x63\x32\xba\x8e\x06\xe3\xfe\xe6\xc8\x52\x9c\x51\xbb\xc6\x0c\xaf\x5b\xfb\x21\xe0\xa0\xe5\x53\x19\x79\x01\x48\x8c\x47\x6e\x12\x16\x8f\x12\xcd\x76\xb1\x55\x9f\x18\x1b\x6c\xd6\x7f\xe0\xdc\xd6\x29\x79\x54\x31\x0c\x9a\x98\x12\x93\x6e\x43\x38\xc6\xfe\x91\xa5\xad\xf5\xc3\x19\x4b\xd4\xbb\xf2\xde\x3b\x44\x8a\x5c\xbb\x12\xe0\x17\xc7\x05\x06\xff\x34\xba\xd2\x9b\x40\x61\xf5\x88\x54\xd2\xa4\xa1\x6a\x9c\x75\x0f\xf0\x46\xbe\xa0\x7b\x49\x1f\x4a\xbc\x3e\xb4\xfc\x21\x10\x82\x82\xc5\x75\x0f\xfe\xad\xe2\x8a\xf1\x94\x0f\x8c\x53\x0e\x80\x73\x26\x0a\xeb\x4c\x23\x9a\xce\x92\x5b\x53\x8c\x4b\x56\x76\x6f\x03\x9e\x96\x27\xe2\x2f\xcf\x53\xdc\x64\x69\x14\xd7\x1d\xe0\xe8\xab\x42\xb6\x3c\x6b\x20\x06\x94\xae\xf0\x7d\x25\x43\xb6\x19\x65\x86\xe0\x22\x0a\xaf\x90\x29\x3c\xdb\x13\x67\x18\xb8\x28\x4f\x71\x11\x1b\x35\xea\xc2\xef\x5d\x0f\x29\x5a\xc7\x2e\xd8\x33\xda\x0b\xd2\x19\x2a\x7f\xb7\x17\x75\x7c\xe0\xb8\x0b\x34\x84\xb9\x1c\x90\xd3\x32\x02\x31\xa0\xa9\xd6\x4d\xc3\xfb\x91\xf6\x82\x32\x7b\x0f\xe5\xc1\xd0\x21\x19\x09\x09\x89\x59\x1c\xb7\xbc\x80\xf1\xa2\xc0\xf2\x89\xbd\x9a\xce\x47\x60\x55\x44\x71\x03\xbf\x06\x57\xa3\xeb\x20\xb2\x1e\x45\x72\xdc\xa6\x9c\x81\x21\x50\xf5\x9f\x5b\xd7\xe8\x3f\x9f\xb9\xf7\xd0\x49\x7e\x35\xd1\x67\xfb\x73\x53\xbd\x89\x3e\xa4\x99\x99\xcc\x90\xe4\xb3\xf6\x2f\x11\x64\xda\x74\xba\xc0\x7a\x9e\x30\x8a\xc1\x27\x59\x8b\xdc\x2d\xcf\xb1\x1b\x6a\x77\x5a\x60\xe6\x87\xd8\xa3\x2d\xf6\xb8\x17\x29\xc7\xe8\x9e\xee\xad\xad\x95\x80\x37\x3b\x1a\x5f\xdf\x09\x56\xfa\xd2\x8d\xc6\x78\xce\x9e\x01\x24\xfd\x2c\x21\xe7\x45\xff\x5a\x13\xbd\x67\x1a\xfb\x65\xf3\x97\xa3\xd4\xf3\x1f\x15\x79\x09\x1d\x8a\x90\xa8\xb4\x39\x6d\xe4\x1c\x19\xaa\xa3\xe3\x76\xb1\x4e\xc4\x35\x5d\x4a\x37\x88\x9f\x09\x88\x3e\x97\x53\x6e\xee\x88\x08\xf0\xe9\x32\x1f\x9b\xc1\xa1\xe1\x8e\xc8\xd5\xb9\xc4\xcb\xca\x6f\x0d\x81\x39\x33\xb8\x09\x76\xf8\xe0\xd5\xbf\xf9\xfa\xfd\xfe\xfb\xdd\x5d\x42\x0a\x83\x2d\xdc\xe4\xb3\x12\x48\x6f\x5c\x55\x51\xaf\x79\xfa\xf9\xb5\x01\x7d\x56\x1c\x6a\x0d\x57\x42\xfb\x34\x21\x93\x6e\x66\x57\xfd\x81\x45\xd4\x6f\x43\xe9\xa5\xf0\x6d\xde\x59\x7c\x8b\xa4\x17\x45\x65\x6d\xf4\x6e\x8c\x75\xee\x69\x81\x70\x97\x6d\xa7\xd7\x0a\x51\x78\x05\x6d\x9c\xe7\x25\x4e\xa0\x58\xff\x02\x05\x17\xf6\x26\x91\xe1\xc2\xb9\x50\xfd\x4f\xd6\x2e\x93\x32\xac\xaa\xaf\xdd\x2f\xd5\x4a\x1b\xc9\x7b\x45\x9c\x2e\x75\xf0\xc4\xef\x11\xaa\x26\xad\xd9\x62\xbc\x9d\xad\x31\xb8\x61\x13\x4a\x89\x41\x60\xc9\x02\xe2\x19\x1b\x6e\xb2\x81\xf8\xf3\x83\x66\xe8\xf8\x61\x36\xc2\xd9\xd8\x4c\x2a\x94\xb6\x12\x1d\x75\xa8\xc4\xe9\x63\x96\x8a\xf2\xc6\x96\x25\x22\x8e\x49\xca\x43\x37\x02\xc0\xbd\xb5\x6b\x77\x1e\x0a\x16\xab\x64\x3a\x07\x9e\xc0\x12\xaf\xbf\xf8\x56\xa7\x8b\x51\x10\x72\x86\x59\x28\x3e\x3f\xf9\x02\x2c\xbc\xbf\x8b\xba\x9a\x4d\x72\x49\xe6\x9d\xd1\x1e\x3a\xb4\xc4\x53\x49\xca\x04\x1e\x36\xa7\x12\x0f\x5c\xb4\xe9\x81\xde\xa3\xf7\x7a\xd8\xc5\xa2\xa5\xb2\x4e\xe6\x0b\x84\x30\xf8\xdc\x88\xd6\xdb\xca\x89\xe6\x2e\x20\xc4\x51\x70\xa1\x4e\x33\x25\xd1\x95\x68\x50\xe5\x82\x90\xbc\xb3\x0e\x81\xf8\xb2\xa4\x9e\x9d\x55\x53\x40\xe7\xbe\xf7\xe2\x9f\x9c\x0a\x65\x42\xb2\x5a\x8c\xc2\xf5\x8c\x56\x4a\xe5\x93\xae\xc8\x11\x28\x9b\xdb\x41\xd8\x3c\x8e\xd5\xff\x78\x8d\x85\x64\x43\x40\x76\xa8\xe3\x2b\x83\x51\x3f\xfe\xd9\x57\x91\x10\x18\xfc\xe5\x3b\x6f\x23\x81\x41\x2a\x6d\x0e\x01\x28\x6c\x1e\x96\x91\xe1\x90\x2a\x3a\xf9\xc5\x5d\xbd\xa9\xd9\xe1\xc5\x57\x70\x91\xc0\xf2\x40\x46\xd9\xcc\x2f\x3c\x3a\x71\xe4\x56\x1a\x30\x0d\xbe\xff\x8b\x25\xe9\x34\xf5\x80\xbc\xd3\x58\x7e\x0b\x75\x16\xc0\x58\x0b\xff\xd3\x8a\x74\xdc\x3b\xc1\xa7\xec\x99\xc2\xff\xe0\x08\x11\xf8\xbf\x7f\x67\x07\x75\xec\x2e\x69\xf8\x8d\x61\x25\x1b\xd6\xff\x0c\x27\x61\x9e\x55\xb6\x08\xd2\x7b\xc0\x77\xa2\x94\x75\xb3\xab\x24\xfe\xc8\x7a\x59\x10\x09\x94\x7e\xa1\x99\xc1\xbf\x8c\xf2\xdf\x64\xe0\xe2\x7d\x39\x45\xf5\x45\xff\xb1\x17\xe4\xe9\x59\x3f\xab\xe2\xe5\x2a\xfd\x09\xf2\x84\x44\x29\x15\x51\xc8\x27\x8e\xc3\x98\xa5\x0f\xe0\xda\xde\x6a\xc9\x3e\x43\x41\xd3\x4e\xa6\x91\xb9\x77\xf3\xb3\x3c\xab\xfd\x0a\xb7\x25\xc8\x05\x0a\x18\xd7\xfa\xc9\x3f\x31\x57\x0d\x88\x8c\x1d\x10\x5c\x12\x66\x58\x7f\x04\x7e\xb5\x45\xa7\xf5\x0a\xab\xfe\x0e\x80\xfe\xb0\x06\x97\xa1\xd5\x09\xc5\x26\xa1\x2f\xf4\x8a\x04\xd1\x5f\x79\xdb\xf7\xc1\x64\xa0\xcc\xc9\xe6\xf5\x43\xcc\x1f\xf5\x8f\xff\x6a\x6d\xa1\x97\xcc\x92\x64\x63\x98\x56\x29\x9d\x2a\xbf\x1f\x01\xc9\xfb\xe4\x9d\xea\x0a\xff\x67\x6b\x02\xdd\x58\xd5\x50\x28\xd9\xde\x1d\x89\x8d\xed\x57\x9f\x58\xe5\x1e\x03\x4f\x11\x08\xcd\x36\x53\x3c\xcb\x3c\xba\x66\x8c\x3d\x21\xec\x26\x8c\xcf\xf8\xbd\x41\xb3\x21\xfb\xef\x8c\xda\x2a\x40\x29\x56\xac\x6a\x02\x1c\x52\xea\x5c\x9e\xcf\x55\x06\xd5\x56\x3b\xa7\xa4\xb9\x84\x86\xfb\x32\xf4\x06\xd7\x1b\x80\xb2\xe3\xd5\x07\x85\xb8\xdd\xdd\x60\x72\xaa\xfa\xfb\xca\x27\xbe\x9c\x83\xd1\x2f\x56\x94\x07\xa7\xc0\xac\xdb\x22\xab\x67\x69\xb7\x7a\x43\xcf\xc6\x9a\x7c\x1a\xf6\xdb\x67\xa1\xba\x3b\xd7\x91\x0b\xd7\x2b\x25\xf5\xf6\x06\x9e\x9c\x7e\x6a\xd8\xbb\xca\x8c\x2c\xff\x53\x3a\x7a\x9b\x75\x9f\xc7\xd8\xec\xe3\x09\x5f\x71\xa3\x6f\xb8\x4f\x11\xe4\x1f\x15\xd2\xb1\xff\x19\x92\x6f\x1a\x38\x69\xc9\x77\xaf\x11\x97\x76\x1e\x19\x45\x94\x7a\x1a\xe5\x77\x27\x6c\xdb\x28\xfd\x45\x2f\x7d\x9e\x03\x29\x46\x53\x55\xce\x99\x43\x00\x8d\x1a\xd2\xff\xa8\x22\x12\xde\x6b\x1b\x45\xce\x07\x08\x2e\xc7\x83\xb4\x4a\xbc\xef\x6c\x85\xe4\xd7\x0a\xeb\xf7\xda\x48\x65\x91\x0c\x95\xa2\x1c\x04\xd0\x78\x25\x6c\x9c\xac\x55\x14\x09\x8d\xd8\x21\x9f\xc0\xe1\x6a\x68\xa3\x94\xfd\x31\x52\xcf\x4b\xdd\x1d\xa3\xa9\x61\x04\xbd\x59\x00\x80\x40\xa4\x9c\x38\xcd\x5d\x5d\xe4\x1c\x7d\x31\x28\x4b\x28\xe0\x8b\x90\xd6\xa8\x19\x23\xc3\x71\x82\xdd\x2b\x3a\x18\x6a\xd7\xb5\xe8\x6f\x78\xb8\x39\x9c\x95\x96\x88\xfa\xdf\x88\x63\xda\x67\x13\xd0\x2a\xf6\xd2\xa9\x92\xc8\x7e\x7f\xc8\xf2\x85\x82\xbb\x17\x86\xfd\x4c\xbe\x9f\xbd\xde\x2a\xc1\x65\x07\x51\xed\xd0\xb8\xf0\x6c\xc4\xb9\x4c\x8e\xf4\x1f\x05\xdf\x87\xa8\xb8\x3e\x07\x85\x7f\x65\xbd\xee\x9b\x1a\x68\xfe\x8f\x3f\x6b\xf0\x4f\x7c\x9c\xd9\xb7\x8d\x8e\x9e\x39\x95\x1d\x4e\xca\x02\x32\x39\xd0\xa7\x50\x60\xa5\xcf\x7d\x8f\x7c\x43\xc7\x03\x1a\x21\x49\x10\xfd\x7a\xf6\xf5\x81\xc3\xcc\x3b\x3c\xfc\x1c\xe8\xd0\x88\xf7\x45\xf4\xf7\xc2\x4f\x21\x40\xcf\xe5\x9a\x60\xe9\xa9\xde\x30\x26\x50\x49\xbe\x79\x3d\xcf\x68\x16\x62\x26\x0a\xa2\xf2\x7e\xcc\x1d\x6b\x8d\x4b\x97\x41\xab\xfe\xba\xc1\x1b\x44\x77\xad\x8f\x7e\xf4\xde\x83\xee\x1b\x1d\x8c\xf0\x3a\x8c\x56\x9a\x3f\x65\x8b\x9a\x47\x24\xd2\x1c\xfd\xa7\x19\x5e\xcf\x5b\xee\xef\x74\x89\x2e\x3e\x57\xcf\x52\x63\xfe\x59\xde\x61\x79\xb3\x45\x59\xaf\xac\x71\x55\xeb\x20\x9a\x1d\x54\x9d\x8b\x2f\xc1\x9a\xcd\x5a\xf3\xa6\xe7\x39\xdd\x55\xcb\x9f\xb0\xc8\xa1\x4f\x3f\x5b\x99\x4c\x49\xe8\x81\x66\xff\x56\x71\x51\x05\x4d\xd9\x1c\x7b\x23\xa0\x5d\x20\x05\xb5\x71\x3b\x61\xb7\xad\x2b\x59\x8d\x11\x7b\x25\x87\xa6\x75\x10\x90\x2b\xa5\xb0\xac\x0d\x38\x9d\x63\x9b\x1b\xd6\x72\x80\x44\xd5\x30\x05\x28\x5f\x89\x36\xee\x8d\x79\x40\xac\xf4\x2e\x90\xb3\x09\x73\x79\x08\x8d\x09\x5a\xd9\xcf\x5b\x66\x62\xad\x70\xb8\x18\xe9\x7a\x03\xa4\xe2\x18\x6b\x16\xfc\x5b\xd6\x03\x94\x8c\x4f\xf3\x9b\x4e\x28\x98\xea\x93\x70\x07\x9d\x46\x0e\x76\xf0\xff\x94\x18\x08\x5d\x00\x7f\x8a\xc9\xa1\x48\xbe\x38\xab\x50\x42\x82\xf1\x94\x25\xcb\x4f\x6c\xd2\x1f\x03\x28\xb4\x36\xa1\x2e\xb9\x15\xcf\xab\xc0\x8a\xda\x14\xac\x31\x40\x5d\xa7\xe1\x3c\x5b\x72\x63\xab\xbf\x85\x3b\xd3\xdf\xf9\x30\x88\x91\xc4\x8b\x2d\xca\x5b\x6d\xae\x9c\xdd\xb0\xa2\x17\x22\x0d\xaf\xe1\x24\x46\x01\xea\x51\x98\x5a\x73\xd0\x1a\x91\x48\x1c\x55\x46\x0f\xa7\x49\x8a\xba\x26\x93\xa9\x64\x82\xfb\xc7\x78\x88\xa0\x0b\x78\xaf\xe2\x0e\xa8\x98\xa9\xe1\x72\x41\xa4\xdc\xbd\xde\xd8\x21\xd8\xf3\x0b\x5b\xa1\x6b\x79\x80\xd5\xa9\xc2\x60\xd5\xec\x6e\x97\x7a\xfe\xc4\xe6\x56\x61\x6f\xd4\xf3\x45\xbc\x16\xbe\xd2\x6b\xe1\xa1\x8d\x8d\xb9\x8d\x0d\x17\x62\x93\x52\x53\x53\x53\xbd\xdb\x55\xbd\xdb\x45\x10\x6a\x0c\xea\x18\xc4\x4c\xb5\xcc\xfb\x98\xd9\xd8\xec\x47\xf6\x3f\xb4\xb1\x51\xb4\xb8\xa1\x52\x6e\x1c\xc1\x95\xac\xe2\x17\x54\xef\x35\x31\xe3\x80\xbf\xf8\xf1\x73\x0a\x78\xf3\x9b\xfb\xf4\x42\xb9\xf4\x3a\xf5\xfc\xc3\xd7\x25\xe8\xef\xf1\x65\xff\x9c\xea\x31\x1e\x5f\x9c\xda\xf3\x74\x0c\x09\xf5\x18\xef\x66\x07\xe5\xc5\x9d\xc1\x29\x30\x0c\xa7\xfa\x23\x60\xb0\xf9\x12\x81\xbc\x34\x8e\x23\xa8\xbf\x28\x59\xfb\x50\x72\x9f\x50\x86\x6e\x5b\x7b\x20\x26\xa7\xd0\x01\x59\x77\x7d\xe8\xe9\x11\x3c\xaa\x50\xf6\x68\xe3\xda\x62\xd0\x9a\x82\x70\xb8\x7a\x7e\x88\xc5\xa3\x8a\xbc\x01\xc3\x81\xa1\x80\xd7\x8d\xe4\xc7\x33\x01\xc1\x2c\xaf\xb7\x2b\xd0\xe5\x22\xa9\x6f\x6a\xeb\x7d\x16\x6c\xe4\x07\x82\x3e\xfb\xa3\x50\x58\x05\x21\x12\x01\x37\xc9\xe4\x74\xb4\xec\x87\x13\x67\x21\x91\xf0\xae\xb1\xc9\x12\x97\x0c\xaf\xec\xa0\xca\xb5\x81\xc7\x1c\xdd\xcb\x16\x43\x3f\x92\xe5\x2a\xd1\x61\x92\x0e\x30\x5a\xcf\xaf\x29\x1b\xc1\x66\xe7\x26\x40\xb6\x44\x3a\x17\x5f\xfd\x7c\xf6\xb3\x4e\xff\x7e\x59\x4c\x62\x4c\x35\x5d\x02\x81\xc1\x51\xe4\xe5\x49\x62\x57\x44\xa0\xe7\xcb\xf0\x72\x5a\x33\x57\x54\xb9\x34\x36\xdb\x6f\x29\xb7\x78\x5f\x60\x84\x97\xaf\xdd\xf8\x7f\x7e\xd2\xe6\x8d\x9e\x66\x66\xe9\x68\x96\xa8\xd1\x7e\xca\x85\x17\x9d\x0e\x91\x5e\xcf\xb5\x99\x73\xb3\x69\xff\x5a\x19\x8e\x34\x0b\x06\xb2\xcc\x35\xa1\x0f\x81\x5c\xfb\x9d\x17\x2e\x03\x0a\x17\x2d\xcc\xbe\x9f\x85\x09\x42\xf8\x09\xa2\x99\x52\x5c\x9e\xcd\x22\x3e\x9b\x2f\x9e\x89\xcd\x20\x1b\xbd\x3e\x97\xf4\x46\x27\xaa\x25\xa8\x15\xb7\xfd\x59\x8c\xcf\x14\xc0\x6d\xde\xb2\x64\x5a\x08\x40\x88\x5d\x08\xfd\xf2\xfd\x1d\xf3\x67\xc5\xb1\x26\xad\x07\x2f\x0b\x3f\x67\xbb\xcf\xf3\xf6\x38\x28\x5b\xfe\x66\xd3\x40\xab\x75\x2f\x1f\x6c\xc1\x3b\x1d\xd4\x93\x86\x64\x84\x7b\xec\x94\x52\x7f\x8f\x35\x95\xf7\xa6\xa9\x3d\xe7\x24\x70\x9d\x9d\x2d\x6d\xec\xfe\x72\xe8\x12\xe5\x7d\x83\x09\xd9\x77\x43\x08\xf6\x38\xd5\x0f\xcd\x46\x3a\x62\xbe\xa8\x89\x75\x6e\x5a\x71\x4e\x9c\x6f\xe2\xfe\xd6\xe4\x63\x1a\xb6\x1d\xfe\xed\xfe\xbf\x44\xeb\x99\xf3\xdb\x32\xce\x0c\x43\x76\x42\xfc\xb8\xe2\x5e\xb9\xff\x86\x0b\x06\x93\x3b\x2a\x12\x2b\x7b\xb8\xea\x6b\x76\xdc\xe0\xc7\x75\xc6\xca\x51\x9c\x93\xe2\x9e\xc9\xe0\x09\x8f\x66\xaf\x64\xb0\xaf\xb4\x99\x23\x66\xc2\xa3\x59\x4b\x31\xb5\xc4\xb5\xd1\xf3\x8a\x86\x45\x50\x9f\xd6\x7a\x63\xb6\x95\x2a\x9f\xf5\x07\xc3\x95\x0a\x99\x8a\x09\x8f\x99\x6a\x3b\x05\x9b\xc6\xd9\x39\xf6\x98\xf0\x0c\x9e\x4d\xec\x0d\x31\x8e\x88\x8e\xc4\x83\xd8\x45\x27\xbb\x73\x59\x5f\x78\x3d\x9b\xe7\x73\xc8\x51\x7e\xea\xf9\xe6\xbb\xd6\x3e\xed\xf6\xde\xaa\x30\xf5\x7c\x2d\x42\x96\x02\x7e\xd9\xef\x69\xdb\xe2\x7e\x86\xf0\xed\x9e\x99\xcb\x5e\xb4\xea\xef\xd2\xfe\x47\x69\x66\xd4\x9e\x5d\xc0\xd3\x8c\xb6\x63\x4a\x91\xac\x00\x8d\x96\xeb\x35\xbf\x2a\x5d\x6f\x09\x38\x7a\x75\x3e\x73\x73\x50\xe1\xd6\x2b\xfd\xd5\x0b\x13\x74\x21\xe6\xa2\x1d\xb1\xa5\x4d\x68\x15\x64\x17\xf8\x90\xf7\x1e\x5d\x4e\xdf\xfe\x99\x0f\x14\x3b\xc2\x73\x36\x75\xbd\xd2\xf8\x70\x82\x65\x3c\x05\x71\x48\xf0\x66\xa9\x12\xb2\xfa\x7b\xc9\x0a\xb0\x7a\x2f\x04\x30\xb8\x7f\xdf\xc6\x26\xf6\x66\xa6\x67\x60\xc1\x91\x50\x94\x8b\xec\xe1\xb9\x02\x8e\x2a\xd7\x7b\xc6\x0f\x6c\x42\xce\x2b\x68\x88\x96\x25\x78\xe2\x73\x0e\x17\xd1\xc6\xcf\xf7\x87\x9b\x44\x79\x67\x26\xa6\x67\x3e\xfa\x6a\x3a\x77\x3b\x64\xe0\x0b\xa3\xc5\x78\x22\x38\xe1\xa9\x6a\x2e\xcf\x59\x3f\x68\xb5\x36\x5c\x7d\xfd\x35\x6d\x97\xb1\x4a\xcb\x09\xd6\x38\x61\xff\x29\xa8\xe3\xaf\x36\xd2\xc0\x40\xe2\x06\x47\xba\x39\xb0\xd7\xbb\x3f\xb1\x4f\xb1\xff\x9f\x82\x6e\x14\x8e\xc4\xaf\xd0\xa2\x6e\xb2\x57\xaa\xa2\xc5\x86\x94\x64\x03\xd7\x0c\xe0\xc4\xe9\xa4\x04\x2b\x56\xc0\x0d\x16\x85\xb3\xad\xe0\xc0\xf5\x68\x29\x4a\x62\x10\x34\xfe\x0c\x92\xf4\x55\xa4\xb7\xdb\x33\xc1\xe6\xc5\xa3\xc6\x29\xad\x6b\x74\x43\xbc\xe1\x78\xee\xc7\xef\xb2\xea\x69\xa8\xdd\x4e\xae\xea\x2d\x91\xdc\xc5\x9c\x95\x45\xb0\xe9\xb8\xca\x1a\x9f\xb9\x1a\xb3\x34\xf2\xec\x72\x63\x9c\xed\x80\x42\xf7\xc6\xce\x56\xac\x88\xd0\xd5\xd8\xf6\xa9\xef\x75\x9e\x3b\x57\xe6\xf6\xa0\xfd\x72\x82\x2e\x81\x20\xe6\x60\x90\x71\xd2\xa5\xd8\xcc\xd1\x34\xfd\xbe\x04\xeb\x07\xa8\x71\xaf\x5a\x5b\x54\x37\x1b\xee\x80\x41\x6c\x08\x78\x99\x4b\x3f\xab\x05\x6b\x78\xa8\x31\x00\xb9\xe6\xae\xb6\x6c\x92\xeb\xdd\x99\xc0\x6b\x41\xc0\x4a\x31\xb7\xc9\x68\x64\x43\xc4\x82\x33\xde\x2c\xed\x91\x22\x06\x41\x5b\x9a\xf4\xdd\xba\xcc\x2c\x95\x4b\x51\x84\x34\x30\xf5\x05\x6d\x90\xda\xcb\x23\xb4\x24\x08\x8e\x54\xa5\xcd\x6e\xbe\x90\xaa\xac\x90\x2b\x86\x0e\x84\xee\x63\x12\xee\x80\x99\xdf\x7c\xb9\x80\xf4\xd7\x37\xce\x99\x97\x59\x8e\xc4\xaa\x84\x94\x8e\x0d\x77\x78\x1d\x87\x20\x6e\x6e\x7a\x34\x01\x32\xf2\x61\x85\x6c\x74\x3f\x8c\x0e\xcd\xd3\x11\x78\x03\x0a\x98\x2e\x3d\x73\x4d\x02\x15\x78\x0b\xb8\x04\x82\xa6\xcf\xa8\x62\x21\x57\xd4\x37\x79\x46\xb1\x55\xe1\x7e\x06\xea\xa0\x86\xc7\xb5\xa5\xea\xc1\x3a\x10\x88\x80\x2b\x2f\x60\xcd\x7b\x14\xc8\xa4\xfb\x46\x1b\x59\x17\xc2\x00\xef\x04\xde\x76\x67\xc8\x32\xaf\x46\x06\xac\x6b\xfd\x78\xc0\x12\x90\x9b\xd5\xc4\xed\x92\x7c\x26\x1f\x08\xed\xa1\x3e\xbe\x46\xfe\x71\x48\x1c\x92\xcb\xf3\x34\x96\x9e\x6a\xe5\xd6\x1d\x68\xd5\x8e\x59\xe2\xcc\x5b\x66\xc8\x94\x18\x17\xd2\x6f\x87\xae\x58\x28\xf7\x6d\x30\x70\x6e\x32\x0c\xfe\x02\x79\x76\xd8\xca\x05\x1c\x28\xf7\xe5\xbf\x01\x49\x35\x7b\x8d\x2b\xae\x59\x8b\xf7\x45\xb0\x23\x1f\x84\x00\xe0\x10\x06\x2d\x36\xdc\x7b\x07\xa0\xa0\x9b\xe9\xe8\xf4\x74\x81\xf3\x5d\xbf\xe9\x93\xf3\x66\x0c\x52\x10\x2e\xf9\x3f\xe4\x0c\xb0\xf5\x2a\xbf\xd8\xc6\x62\xd4\x4a\x1c\xd0\x70\x91\x5e\x4c\xf7\x1f\x18\x5e\x65\x30\x0b\x01\xb2\xaf\x02\xc9\xc2\x75\x92\xb7\x9d\x0b\xab\x65\x1f\xba\x36\x01\xe3\x0f\x58\x02\xb6\x19\xfa\x86\x64\xe1\x7f\xcb\x84\x9a\x6e\x3d\x66\x07\x1d\xd1\x69\x20\x26\xca\xd4\x4c\xe8\x1c\x00\x00\x80\xc9\x6d\x0b\xc3\x3a\x7d\x97\x97\xff\x17\x00\x00\xff\xff\xd6\x8d\x3d\x44\x14\x1f\x00\x00")

func dataMapsTilesetsOverworldPngBytes() ([]byte, error) {
	return bindataRead(
		_dataMapsTilesetsOverworldPng,
		"data/maps/tilesets/overworld.png",
	)
}

func dataMapsTilesetsOverworldPng() (*asset, error) {
	bytes, err := dataMapsTilesetsOverworldPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/maps/tilesets/overworld.png", size: 7956, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSheetsEntityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x4f\x8b\xdb\x30\x10\xc5\xcf\xd1\xa7\x08\xc3\x1e\x43\x22\x59\xfe\x23\xe9\xd6\xc2\xd2\x5b\x29\x9b\x96\x1e\x97\x89\x34\xde\x98\xae\x63\x23\x2b\xf5\x6e\x43\xbe\x7b\x91\x72\x59\x1f\x1c\xf6\xe8\x8b\x0d\xef\x3d\x49\x3f\x1e\xcc\x5c\xa0\xf6\xd8\xd2\x00\x66\x7d\x61\x0c\x9e\xc8\x3d\x3f\xe2\x10\x9e\xf9\xb6\x3f\xbd\x80\x61\x17\xb6\xba\x25\x62\x00\xde\xc0\xf0\x0d\xbc\xa7\xef\x08\x46\x94\x1b\x38\xc6\xdf\x75\xc3\x56\xe0\xbb\x80\x81\x1c\x98\x75\x8d\xaf\x03\x45\x29\xf8\xa6\x6d\xa7\xd2\xd0\xfb\x26\xd0\xbe\x3b\x7b\x4b\xfb\xe6\xdf\x27\xee\x1d\xa6\xd9\x89\xcf\xae\x9b\x0f\xd0\x62\x0e\x3a\x1e\x58\x22\xf5\xf7\xce\x87\xe3\x7c\xd7\x32\x5b\x32\xf6\x6c\xdb\xb9\x5a\x26\xf6\xbe\x3b\xdf\x6b\xbb\xcc\x97\x8c\x3d\xdb\xb6\x5a\xe8\x44\xfe\xa6\x7b\x6b\x44\x2f\x74\x22\x13\xf5\xfc\x1e\x11\x4b\x9b\xc8\xc8\xdd\x52\xc0\xb4\xbf\x57\x80\x7d\x0f\x66\x0d\xc7\x10\xfa\xc1\xec\x76\xe3\x38\x6e\x6d\xe7\x08\x4f\x6e\xa4\xc3\xd6\x76\xed\x2e\xd0\x5b\x38\x7b\xea\xd1\xfe\x21\x0f\xf1\x81\xbf\xe4\x87\xa6\x3b\xc5\x73\x62\xcb\x93\xd4\xb4\xf8\x12\x9f\x83\xc7\x53\x68\xc2\x7b\xaa\x23\xea\x75\xe7\x5b\x0c\xd1\x78\xfa\xf6\xf5\x8b\x52\x4a\x25\x79\xf8\x08\x97\xa9\x09\xbd\xc5\xd7\x74\x93\xb8\x25\x5b\xf4\xe1\xdc\x3b\x0c\x49\x7c\xf8\x79\xa3\xf9\x91\x68\xcc\x3e\xba\xbf\x92\x6b\xd4\x41\x52\x26\xb5\xae\x0a\xa4\x2a\xc7\x83\xac\xb2\x52\x15\x68\x85\x95\x35\x55\x95\x33\xda\xd9\x83\xd6\x52\x38\x5b\x5a\x29\x75\xa1\x1c\x97\x58\x88\x22\xb3\x79\x41\xd6\x72\x53\x6b\x51\x71\xae\x5c\x5d\x6a\xee\x78\x56\x62\x9e\xf3\xac\xca\x2b\x6e\xcb\x9a\x50\xaa\x07\x60\x57\x76\x65\xff\x03\x00\x00\xff\xff\x01\x0a\x4e\xab\x02\x07\x00\x00")

func dataSheetsEntityJsonBytes() ([]byte, error) {
	return bindataRead(
		_dataSheetsEntityJson,
		"data/sheets/Entity.json",
	)
}

func dataSheetsEntityJson() (*asset, error) {
	bytes, err := dataSheetsEntityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sheets/Entity.json", size: 1794, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSheetsEntityPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\xec\x02\x13\xfd\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x80\x00\x00\x00\x10\x08\x06\x00\x00\x00\xde\x58\x77\x88\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x02\x9e\x49\x44\x41\x54\x68\xde\xed\x59\xd1\xad\xeb\x20\x0c\x4d\xae\x3a\x02\x63\xb0\x0b\x03\xf1\xcd\x10\x6c\xd1\xee\xc2\x10\xa9\x94\x1d\xb8\x5f\x8e\x1c\xd7\x36\x06\xf2\xa2\x77\xa5\x22\x45\x6a\x53\xec\x63\x1f\x1f\x0c\x49\xd7\x85\x19\xce\xb9\xca\xdd\xdf\xf7\x7d\x5d\x6e\x18\x5f\xfc\xfb\xf0\x57\x0e\x3c\xa5\xc4\x4e\x8e\x31\x9a\x82\x98\x49\xe0\x8b\x7f\x2f\xfe\x6a\x05\xb7\x06\x31\x93\xc0\x17\xff\x7e\xfc\x9f\x9e\x76\x11\x42\x50\x15\xd6\x4a\x20\xa5\x24\xda\x5e\xd5\x3a\xff\x2a\x3e\xdc\x07\x8e\xef\xc2\xff\xa1\x01\xc4\x18\xd5\xe2\x97\x52\x96\x52\xca\x10\x91\x9a\x80\x7a\xfc\xfd\x8b\x22\xd2\xfc\x43\x08\xa7\x0b\xff\x76\x35\xbe\x73\xae\x02\xaf\x9a\x08\x34\xfc\x51\x01\xad\x16\x52\xb1\xaa\x20\x08\xda\x4a\xb0\x3d\xa7\x42\x1a\x98\xf7\xfe\xe4\xa3\x65\x4f\xc5\x29\xe1\x5b\x5a\xa8\x66\x5f\x4a\x59\xbc\xf7\xac\x2d\xfe\xad\x95\x3f\xcd\xf7\xf5\x7a\x75\xc7\x2f\x2d\x46\x6a\x0f\x02\xa2\x78\x16\xfe\x9a\x02\x00\xc7\xde\xfb\x83\x00\x6e\x0f\x9a\x11\x10\x24\x20\x11\x2f\x15\xe2\x2a\x01\x61\x7c\x4a\x24\x1d\x12\x0f\xbd\x5d\x41\xe2\x90\xc6\x21\x71\x72\x95\x80\x1e\xf8\x06\x5e\x05\x1a\x78\xcf\xa0\x02\xd2\x0e\x31\x16\x11\x70\x05\xa2\x02\xd2\x12\x47\x38\x95\xc6\x81\x7d\xd3\x22\xc0\xe7\x16\x7e\x87\x80\xaa\xf5\xb1\x8e\xd6\x83\xb3\x83\xfa\x85\x10\x0e\x0c\xf8\xac\x8d\x07\xe7\x84\x23\xa4\x95\xd8\x8c\x80\xf6\x7d\x5f\xbd\xf7\xaa\xad\x85\x84\x51\x01\x71\xf8\x5a\x01\x35\xfc\x11\x01\x69\x7e\xe8\xfc\x91\x77\x01\x1a\x77\x0f\xee\x14\x09\x13\x31\x38\xec\x61\x5a\x00\x33\x02\xa2\x04\xd3\x36\xde\x2a\x2c\x8d\x79\x44\x40\xb8\x58\xa5\x94\x63\x1f\xb5\x08\x9a\xe3\xac\x57\x40\x20\x44\x7a\x86\xc0\x9c\xc4\x18\x9b\x9d\x63\x58\x40\xce\xb9\x9a\x73\xae\x39\xe7\xea\x9c\xfb\xb8\x2c\xa7\x59\x6c\xbb\x6d\xdb\x71\xc1\x7d\xc9\x6e\xdb\xb6\xc3\x8e\xc3\xa7\x7e\xb1\x2f\x6a\x8f\xf3\x90\xf2\xe1\xf0\xa9\x0f\xee\xc2\xf3\x24\x7c\x9c\x73\xce\xf9\x64\xa3\xf1\x80\xfd\x71\xf9\x5b\x6d\x31\x26\xc7\xab\xb8\x05\xe0\xc3\x83\x75\xc5\x58\xd4\x3e\xd2\xbe\xf0\x2a\xe0\x4e\xb4\x52\x0b\x47\x2b\xe5\xc3\x1f\xc9\xab\x5e\xf5\x6a\x95\xe2\xd3\xbc\x71\x2c\x21\x84\xe6\x19\x45\xda\x4e\x5b\x4f\x38\x60\x1b\x63\xac\x2d\x0c\x55\x00\x33\x83\x13\x0f\x3d\xa9\x52\xe2\x29\x81\x31\xc6\x25\xa5\x74\x2a\x3c\x4e\x88\x7b\x12\xa1\xdb\xcf\xac\x80\x30\x26\xfe\x2e\x2d\x08\x8c\xcf\x09\xf0\xca\x83\x75\xef\xfb\x91\x2e\xec\xd9\xd6\x43\xdb\x24\xb6\x6f\xf9\x92\xda\x3f\x5c\xcf\xe7\xd3\xdc\x3e\x7b\xb6\x00\x09\x9f\xda\xf6\xb6\x6f\x6c\xcf\x6d\x1d\x23\x5b\xb1\xd5\x46\xc2\xa6\x39\x3c\xa4\xf6\x63\x69\x37\x52\xeb\xc6\x4a\xe3\x56\x51\xab\xf5\x4a\x2b\xf0\xfd\x7e\x9b\x63\xa0\x2b\xb0\x77\xfb\xe1\xf0\x47\xed\x71\x87\xe9\xdd\x76\xac\xbc\x41\xeb\x4f\x29\x7d\xe4\x2f\x1d\xac\x4f\x2f\x82\x5a\xed\xa4\xe7\x5f\x28\xed\x2d\x59\xcb\x0f\x37\xb7\xc7\x7e\x64\xfe\xff\x84\x3f\xc3\x7f\x0b\x9b\xab\xcf\x2f\xe5\xa1\x37\x90\x1b\x32\xee\xf3\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x82\x65\x6c\x58\xec\x02\x00\x00")

func dataSheetsEntityPngBytes() ([]byte, error) {
	return bindataRead(
		_dataSheetsEntityPng,
		"data/sheets/Entity.png",
	)
}

func dataSheetsEntityPng() (*asset, error) {
	bytes, err := dataSheetsEntityPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sheets/Entity.png", size: 748, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_east_0Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x42\x01\xbd\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xf4\x49\x44\x41\x54\x38\x8d\x95\x53\xd1\xad\xc4\x20\x0c\x33\xd5\x8d\x60\xb6\x60\x97\x0e\xc4\x37\x43\x30\x46\x77\x61\x08\xa4\xb0\x43\xee\xe3\x5d\x78\x40\xe9\x49\x67\x09\xa9\x0a\x75\xe2\x38\xc4\xa9\x2a\x56\x78\xef\xef\x41\x00\x22\xe2\xd6\xd8\x6b\x47\x4e\x29\xed\xf8\xf0\xde\xeb\x9a\xc4\x61\xa8\x45\xcf\x47\xb2\x21\xc6\x38\x29\x39\x06\xf2\x57\x22\x00\x9c\xe7\xd9\x95\x4c\x0a\x3e\xe4\x1e\xdc\xa9\x30\xb2\x21\x84\x00\x11\x71\x8e\x24\x9a\x34\xd0\x73\x6b\xdc\x9a\x30\xc6\x08\xe0\xdf\xd0\x9b\x89\x2b\x4a\x29\xbd\x62\x29\xc5\x12\xcc\x1e\xd0\x13\x4d\x9a\x1b\x49\x46\xdc\x41\x44\xfa\xf7\xb1\xdc\x4d\x23\x1a\x93\x3c\x25\x3c\xec\xd2\x8c\x4c\x29\x21\x84\x80\x10\xc2\xf4\xe3\x75\x5d\x16\x9b\x1f\x53\xad\x15\xb5\x56\x90\x04\x49\xcd\x39\x6b\xce\x59\x49\xde\x4e\xce\x19\x24\xa1\xaa\xfd\xbc\xac\xd2\x67\x12\x00\xfe\x9c\x1e\xcd\xdb\xb5\xf7\xe4\xc1\xef\x20\xd9\x5b\x80\x02\x1b\xd9\x63\x4b\x93\x7c\x55\xbd\xbf\x83\x26\xcd\x3d\xed\xc4\x38\xbe\xde\x17\x49\x23\xf6\xa0\x42\x6f\x2b\xbd\x5b\x65\x00\x78\x03\x86\x14\x9c\xce\xf9\xbc\x37\x3e\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x70\x97\xe5\x00\x42\x01\x00\x00")

func dataSpritesRed_east_0PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_east_0Png,
		"data/sprites/Red_East_0.png",
	)
}

func dataSpritesRed_east_0Png() (*asset, error) {
	bytes, err := dataSpritesRed_east_0PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_East_0.png", size: 322, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_east_1Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x2b\x01\xd4\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xdd\x49\x44\x41\x54\x38\x8d\x8d\x52\xc1\x0d\xc4\x30\x08\x33\xd5\x8d\x00\x5b\x64\x97\x0e\xd4\x37\x03\x75\x97\x6c\x91\xec\xc0\x7d\x0e\x8e\xa6\xf4\x74\x96\x22\xb5\x8e\xec\xba\x06\x30\x33\x60\xb8\x1c\x33\xfb\xfb\xbc\x50\x40\x44\xac\xe2\xc7\x18\xb4\x72\xaf\x39\xe6\x85\x60\x61\x53\xd5\x4a\x0f\x11\xb1\xd5\x64\xfb\x57\x0c\x00\xaa\x7a\x4b\x17\x06\x2c\xfc\x28\x74\xec\xfb\x1e\x49\x9c\x23\x58\x88\x83\xac\x52\xb8\xd8\xd1\x5a\xc3\x1c\x93\xc8\x65\x2c\x5c\x16\xb7\x1a\x1e\xc7\x01\x00\x98\x63\x52\x24\xf8\x65\xd0\x7b\x8f\x2f\xf6\xde\xd1\x5a\x03\x00\xf2\xf2\x73\x89\x94\x45\x2e\xac\x90\x27\xb7\x2d\x77\x97\x11\x65\x93\x27\xc3\xed\x13\xdf\xdf\x4d\x55\xd1\x5a\xf3\xa8\x81\xf3\x3c\x23\x7e\xe6\xcb\x4d\x74\xac\x26\xaa\x4a\x5e\x62\x44\x66\xe6\x5c\x8e\xe5\xb8\xab\x41\xd6\x55\x25\x96\x5b\xa8\xaa\x31\xc6\xf4\xfc\x5d\x24\x66\xbe\x19\xac\x31\x5d\x9c\xee\x22\x41\xf9\x0b\xf8\x14\x95\x44\x79\x47\x28\x8f\xf1\x0d\x82\xb6\x95\x2c\x40\x1a\x9e\x12\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x9d\x5c\x24\xac\x2b\x01\x00\x00")

func dataSpritesRed_east_1PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_east_1Png,
		"data/sprites/Red_East_1.png",
	)
}

func dataSpritesRed_east_1Png() (*asset, error) {
	bytes, err := dataSpritesRed_east_1PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_East_1.png", size: 299, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_north_0Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x28\x01\xd7\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xda\x49\x44\x41\x54\x38\x8d\xad\x53\xdb\x11\x83\x30\x0c\x53\x7a\x1d\x41\xde\x82\x5d\x18\x28\xdf\x1e\x82\x2d\x60\x17\x86\x08\x07\x3b\xb8\x1f\x9c\x69\xc8\xa3\xc7\x47\x7d\x97\x8f\x28\x96\x2d\x2b\x49\x30\x33\x94\x21\x22\x35\x08\x60\xdf\xf7\x50\x62\xef\x16\x59\x55\x5b\x7c\x88\x88\x95\x45\x02\xb2\x5e\x14\x76\xc9\x1e\x31\x46\x1c\xfb\x71\x15\x79\xfd\xcc\xee\x04\x85\xa0\xf0\x5e\x80\xc2\xe6\xdc\x9d\x30\x55\x05\x85\xb5\x82\x18\x63\x97\x55\x9e\xa9\xea\xe9\x01\x85\xb6\xae\x2b\x86\x61\x78\xd4\xde\x73\x55\x35\xbc\xca\x83\x27\xe4\x7b\xd8\xb9\x48\x1a\x49\x4b\x29\x59\x4a\xc9\x7c\xdf\xc3\xa7\x69\x02\xc9\xef\x35\x96\x26\x96\xd7\xd9\xf0\x26\x5c\x0a\xbc\x43\x56\xbd\x52\x90\x63\x59\x6e\xfd\x12\x73\x05\xe3\x38\x02\x00\x96\x65\xe9\xfa\xf1\x9f\x11\x72\x23\x5b\xf2\x7d\xcd\xf3\x7c\x49\x77\x13\x9b\x23\x78\x77\xef\xea\xfb\x6d\xdb\x2a\x75\xb7\xcf\xd4\x18\xc5\x3f\xcd\x85\xa9\x6a\xc8\x8b\x7f\x00\xd7\x33\x9a\x66\x27\x4c\x54\x1d\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x9f\x18\xae\x69\x28\x01\x00\x00")

func dataSpritesRed_north_0PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_north_0Png,
		"data/sprites/Red_North_0.png",
	)
}

func dataSpritesRed_north_0Png() (*asset, error) {
	bytes, err := dataSpritesRed_north_0PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_North_0.png", size: 296, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_north_1Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x27\x01\xd8\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xd9\x49\x44\x41\x54\x38\x8d\x8d\x53\xd1\x0d\x85\x20\x0c\x3c\x5e\x1c\xe1\xdc\x82\x5d\x1c\x88\x6f\x87\x60\x0b\xdd\xc5\x21\x9a\xc8\x0e\x7d\x1f\x8a\xa9\x15\x8c\x4d\xfa\x41\x7b\x3d\xae\x94\x02\x0a\xf4\x9c\x24\x72\xce\x20\xd9\xf4\x65\x59\x10\xa0\x78\x18\x47\x36\xa2\x00\x80\x00\x00\xf3\x3c\x9b\x80\x83\x72\xa4\x5a\x80\xb5\x94\x12\xca\x5e\x02\x47\xb6\x09\xde\x8a\x3d\x49\x3d\xff\x5e\xd1\x1f\xec\x22\x78\xe9\xfb\x61\x16\xfb\x50\x90\x52\xea\x16\xb6\x72\x01\x7a\x30\x6e\xdb\x86\x18\xe3\x27\x05\x15\x5b\xf6\x12\x7e\x3e\xf1\xa5\xb8\xa9\xc0\x03\xbc\x1a\x1f\xaf\x93\x18\xbc\xac\x0a\xf0\xe3\xec\xb7\x77\x7e\x59\x92\x5a\x3d\xe7\xac\xf6\x6c\x63\x22\xa2\x22\xa2\x24\x15\x0a\x0c\x1c\x59\x6f\x0f\x07\x1d\x2e\x05\xd3\x34\x01\x00\xd6\x75\xed\xbe\x49\x20\x79\x7b\x98\x18\xa3\xb6\x5a\xf0\x23\xbc\x7e\xa3\xdd\x2e\x11\x41\xaf\x85\x33\x07\x92\xf7\xad\x35\x85\x37\x12\x5b\x58\xf3\x75\xb5\x2d\xc1\x1f\xcd\x4b\x9a\xa5\x54\xa3\x12\x95\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xb0\x81\xd4\x03\x27\x01\x00\x00")

func dataSpritesRed_north_1PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_north_1Png,
		"data/sprites/Red_North_1.png",
	)
}

func dataSpritesRed_north_1Png() (*asset, error) {
	bytes, err := dataSpritesRed_north_1PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_North_1.png", size: 295, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_south_0Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x3b\x01\xc4\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xed\x49\x44\x41\x54\x38\x8d\xa5\x53\xdd\xc9\xc3\x30\x0c\x3c\x95\x8c\x20\x6d\xe1\x5d\x32\x90\x9f\x33\x84\xc7\xc8\x2e\x1e\xc2\x60\xed\x70\x7d\x68\x5c\x54\xd7\x0d\x1f\x7c\x07\x86\x58\x3f\x97\x93\x39\x09\x49\xcc\x30\xb3\xef\x20\x80\xde\xbb\xcc\xb1\x6d\xd5\x7c\x1c\xc7\xaa\x1f\x66\xc6\x99\x44\x48\x42\xf0\x8a\xa9\xe9\xcf\xe6\x81\x9c\x33\xbc\xfb\x9b\xe4\x71\x5b\xfd\x17\x90\x04\x08\xa8\x2a\xc7\x29\xa5\xb0\xb5\xf6\x71\x4a\x29\x8c\x35\x20\x00\x86\x11\xd4\x94\x00\x50\x6b\x45\x4a\x69\xf9\xb3\x98\x1b\x63\x6c\x63\xf6\x98\xac\xb5\xde\xaa\xae\xb5\x22\x59\xa2\x77\x97\xc7\x9c\x18\x88\x2a\xe2\xf7\x4c\xbe\x0d\x39\xc9\x12\x57\x05\x33\x02\x99\x00\x8b\x37\x88\x24\xe7\x79\x02\x00\xf6\x7d\x5f\x29\x91\x94\xd2\x8b\xc0\xcc\x38\x9a\x7e\x3d\xe0\x4c\x7e\xd5\xc9\xbf\x7c\xe0\xdd\xd7\x23\x0c\x37\xe6\x9c\x97\xf7\x0b\xe2\xdd\x3f\x8c\x84\x61\xa2\x68\xa8\xf9\xae\xaa\x6c\xad\xa1\xb5\x06\x55\xfd\x5e\xa6\x3b\x05\x2b\xcc\xcb\x04\x00\x71\x14\xb9\x48\xe2\x7a\xbf\x17\xc9\xbb\xe3\x09\x04\xe0\xb4\x7d\xbe\x79\xb8\x96\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xcc\x4e\x6c\x4e\x3b\x01\x00\x00")

func dataSpritesRed_south_0PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_south_0Png,
		"data/sprites/Red_South_0.png",
	)
}

func dataSpritesRed_south_0Png() (*asset, error) {
	bytes, err := dataSpritesRed_south_0PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_South_0.png", size: 315, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_south_1Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x3d\x01\xc2\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xef\x49\x44\x41\x54\x38\x8d\x95\x93\xd1\x8d\xc4\x20\x0c\x44\x1f\xd1\x96\xe0\x74\x41\x87\x7c\x53\x04\x65\xd0\x0b\x45\x20\x85\x1e\xbc\x3f\xc0\x9a\x84\x3d\xdd\x8e\x64\x89\x28\x33\xc6\x8c\x6d\x54\x15\x94\x19\x22\x42\x4a\x09\x11\x99\xe7\xfb\xb7\x88\x4c\xbe\x53\x55\x1c\x8e\x01\x39\x85\x9e\xee\x81\x18\xa3\x03\x08\x21\xd0\xae\x06\xc0\x6b\xc3\xd3\x18\xe3\x4e\x4f\x08\x41\x01\x37\xc4\x00\x87\x25\xc8\x29\x5f\xc5\xbd\x82\x47\x75\xc7\x9e\xfa\x0b\x3e\xe6\xe9\x88\x94\x92\xd6\x5a\x97\x48\x29\xa9\xe5\x4c\x13\x47\x41\x72\xca\xd6\xb8\x6f\x68\x57\x73\xd0\x4d\x94\x53\xb4\x94\x82\xf7\x9e\x52\xca\x9f\xc2\xc1\xf1\xa7\xd7\x76\x35\xb7\x78\x60\xc5\xde\xfb\xed\xf9\x7e\xc1\xab\xf7\x7d\x92\xfe\x53\x81\x7d\xc2\x31\x7a\x3a\x84\x36\x51\xce\x99\x9c\xf3\xf2\xef\xde\xe6\x9f\x4d\x1c\x5e\xcd\x0a\x96\x64\x1d\xbb\x61\x2a\xa5\x4c\xf1\x0a\xb3\x44\xb5\xd6\xc7\x3c\x8c\xfe\x8f\x79\xb0\x33\xb0\xcc\x41\x7f\x06\x98\x5d\x08\x21\xd8\xea\x14\x3e\xe6\x3d\x3c\xb8\x27\xb1\x1c\x9b\xd0\x2e\x12\xc0\x1b\xdb\x66\xb3\x11\xa2\x39\x54\xa9\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x85\xb8\x70\xee\x3d\x01\x00\x00")

func dataSpritesRed_south_1PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_south_1Png,
		"data/sprites/Red_South_1.png",
	)
}

func dataSpritesRed_south_1Png() (*asset, error) {
	bytes, err := dataSpritesRed_south_1PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_South_1.png", size: 317, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_west_0Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x41\x01\xbe\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xf3\x49\x44\x41\x54\x38\x8d\x95\x53\xd1\xad\x04\x21\x08\x1c\x37\x57\x02\x74\x41\x2f\x5b\xd0\x7e\x53\x84\x65\x6c\x2f\x16\x61\x62\x11\x73\x3f\x6a\xd4\x75\x2f\xef\x91\x98\x08\x61\x06\x64\x24\x90\xc4\x68\xaa\x0a\x00\x73\xb0\x5a\x29\x25\xac\xb1\xcf\x0e\xec\xee\x3b\x3c\x54\x95\x2b\xc9\xf1\x57\x30\x00\xb8\x3b\x54\x75\xea\xee\x18\xee\x04\x80\xf3\x3c\x5f\x09\x96\x62\x00\x80\x40\x12\xaa\xca\x94\xd2\x94\x74\xdf\xf7\x03\x78\x5d\xd7\xe8\x86\x52\x0a\x82\x88\x20\xa5\x04\x33\x63\x6b\xf3\x05\x30\x59\x9b\x45\xeb\xa0\x3f\xa3\x92\xa1\x75\x64\x66\x3f\x09\x8e\xea\xbc\x56\x02\x80\x94\x12\xc6\x27\x8e\x4a\x1c\x6f\x80\xdd\xbd\xda\x5e\xc6\x9a\x1c\xcc\xec\x31\x40\x33\x83\x99\xb5\xf9\xcc\x9f\x8c\x24\x48\x42\x44\x20\x22\x88\x31\x42\x44\xb8\x9e\x18\x23\x63\x8c\x14\x11\x36\x0c\xc9\x27\xc1\x70\x28\x22\xcc\x39\x33\xe7\xdc\x49\x56\x82\xed\x0c\xfe\x63\x5d\xc6\xa6\x7f\xd5\x9e\x8b\x3f\x61\x46\xd5\xba\x8c\x2d\x71\xdd\x05\x77\xef\x31\x77\x7f\x6c\x63\x18\xd7\x79\xfc\xe3\x78\xae\x74\x68\xc5\x46\xfb\x02\x3a\x25\xad\x55\xf3\xf0\xf8\xd7\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xad\x05\x05\x95\x41\x01\x00\x00")

func dataSpritesRed_west_0PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_west_0Png,
		"data/sprites/Red_West_0.png",
	)
}

func dataSpritesRed_west_0Png() (*asset, error) {
	bytes, err := dataSpritesRed_west_0PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_West_0.png", size: 321, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _dataSpritesRed_west_1Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x28\x01\xd7\xfe\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\x61\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0e\xc4\x00\x00\x0e\xc4\x01\x95\x2b\x0e\x1b\x00\x00\x00\xda\x49\x44\x41\x54\x38\x8d\xa5\x52\xc1\x8d\xc4\x30\x08\x1c\x47\x57\x02\x74\x41\x2f\x29\x28\x6f\x8a\x70\x19\xe9\x85\x2e\x5c\x04\xfb\xd8\x23\x22\x36\xd9\x3d\xe9\x90\x90\x48\x30\xc3\x30\xd0\xdc\x1d\xff\xb1\x9f\xea\x27\x33\x97\xa8\x63\x8c\xf6\x15\x80\x99\x5d\x55\xcb\x6e\xcc\xec\x33\xc8\xf6\xd7\x62\x00\x50\xd5\x85\xdd\x05\x10\x89\x7d\xdf\x1f\x01\xd2\xdb\x2b\x6e\x70\x80\x98\xdc\xcc\x6e\x8f\xce\xf3\x5c\x0a\x8f\xe3\xc8\x9f\x6d\x8c\xf1\x06\x00\xde\x20\x41\xf3\xa1\xe0\x66\xa1\x45\x06\x00\x00\x37\x33\x88\x08\x82\x91\x88\x7c\x04\xd8\xca\xec\x64\x66\x86\x3c\x62\xde\xc4\x96\xba\xdf\x0a\xaa\xf8\xd7\xee\x6b\x24\xa6\xdc\xa1\x89\xc8\x22\xa0\x88\x40\x44\x42\x9f\xe9\xc8\x1c\x20\xa2\xcb\x7b\xef\x20\x22\xaf\xbc\xf7\xee\x44\xe4\xee\x8e\xf0\x45\xc4\x27\x0d\x82\x49\xa9\x41\x70\x51\xd5\x6b\x8d\x39\xce\x36\x5f\xe3\xc2\x20\x8a\xaa\x1b\xc8\xb9\xe5\x0e\xaa\x31\xcc\xac\x4d\x77\xe0\xf3\x08\x2f\x1d\x82\x8a\x0f\x5e\x54\x5f\x7d\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x6c\x68\xac\x2e\x28\x01\x00\x00")

func dataSpritesRed_west_1PngBytes() ([]byte, error) {
	return bindataRead(
		_dataSpritesRed_west_1Png,
		"data/sprites/Red_West_1.png",
	)
}

func dataSpritesRed_west_1Png() (*asset, error) {
	bytes, err := dataSpritesRed_west_1PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "data/sprites/Red_West_1.png", size: 296, mode: os.FileMode(420), modTime: time.Unix(1623122824, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"data/maps/ortho.tmx":              dataMapsOrthoTmx,
	"data/maps/tilesets/Overworld.tsx": dataMapsTilesetsOverworldTsx,
	"data/maps/tilesets/overworld.png": dataMapsTilesetsOverworldPng,
	"data/sheets/Entity.json":          dataSheetsEntityJson,
	"data/sheets/Entity.png":           dataSheetsEntityPng,
	"data/sprites/Red_East_0.png":      dataSpritesRed_east_0Png,
	"data/sprites/Red_East_1.png":      dataSpritesRed_east_1Png,
	"data/sprites/Red_North_0.png":     dataSpritesRed_north_0Png,
	"data/sprites/Red_North_1.png":     dataSpritesRed_north_1Png,
	"data/sprites/Red_South_0.png":     dataSpritesRed_south_0Png,
	"data/sprites/Red_South_1.png":     dataSpritesRed_south_1Png,
	"data/sprites/Red_West_0.png":      dataSpritesRed_west_0Png,
	"data/sprites/Red_West_1.png":      dataSpritesRed_west_1Png,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"data": &bintree{nil, map[string]*bintree{
		"maps": &bintree{nil, map[string]*bintree{
			"ortho.tmx": &bintree{dataMapsOrthoTmx, map[string]*bintree{}},
			"tilesets": &bintree{nil, map[string]*bintree{
				"Overworld.tsx": &bintree{dataMapsTilesetsOverworldTsx, map[string]*bintree{}},
				"overworld.png": &bintree{dataMapsTilesetsOverworldPng, map[string]*bintree{}},
			}},
		}},
		"sheets": &bintree{nil, map[string]*bintree{
			"Entity.json": &bintree{dataSheetsEntityJson, map[string]*bintree{}},
			"Entity.png":  &bintree{dataSheetsEntityPng, map[string]*bintree{}},
		}},
		"sprites": &bintree{nil, map[string]*bintree{
			"Red_East_0.png":  &bintree{dataSpritesRed_east_0Png, map[string]*bintree{}},
			"Red_East_1.png":  &bintree{dataSpritesRed_east_1Png, map[string]*bintree{}},
			"Red_North_0.png": &bintree{dataSpritesRed_north_0Png, map[string]*bintree{}},
			"Red_North_1.png": &bintree{dataSpritesRed_north_1Png, map[string]*bintree{}},
			"Red_South_0.png": &bintree{dataSpritesRed_south_0Png, map[string]*bintree{}},
			"Red_South_1.png": &bintree{dataSpritesRed_south_1Png, map[string]*bintree{}},
			"Red_West_0.png":  &bintree{dataSpritesRed_west_0Png, map[string]*bintree{}},
			"Red_West_1.png":  &bintree{dataSpritesRed_west_1Png, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
